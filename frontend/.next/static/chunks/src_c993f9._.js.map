{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,0KAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,0KAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,0KAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,0KAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,0KAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,0KAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,+KAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,0KAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC,iLAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,iLAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { Check } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className,\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n"],"names":[],"mappings":";;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,yBAAW,0KAAM,UAAU,MAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC,oLAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,yMAAC,oLAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,yMAAC,mNAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oLAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        warning: \"border-orange-500/50 bg-orange-50 text-orange-800 dark:border-orange-500 dark:bg-orange-950 dark:text-orange-200 [&>svg]:text-orange-600\",\n        info: \"border-blue-500/50 bg-blue-50 text-blue-800 dark:border-blue-500 dark:bg-blue-950 dark:text-blue-200 [&>svg]:text-blue-600\",\n        success: \"border-green-500/50 bg-green-50 text-green-800 dark:border-green-500 dark:bg-green-950 dark:text-green-200 [&>svg]:text-green-600\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,+KAAA,CAAA,MAAG,AAAD,EACtB,2KACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SAAS;YACT,MAAM;YACN,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,0KAAM,UAAU,MAG5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,yMAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,0KAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,0KAAM,UAAU,OAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/app/auth/login/page.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react'\nimport { useRouter, useSearchParams } from 'next/navigation'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport Link from 'next/link'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { Separator } from '@/components/ui/separator'\nimport { useToast } from '@/hooks/use-toast'\nimport { Eye, EyeOff, Mail, Lock, ArrowRight, AlertCircle, LogIn, Building } from 'lucide-react'\n\nconst loginSchema = z.object({\n  email: z.string().email('올바른 이메일 주소를 입력해주세요'),\n  password: z.string().min(6, '비밀번호는 최소 6자 이상이어야 합니다'),\n  rememberMe: z.boolean().optional()\n})\n\ntype LoginForm = z.infer<typeof loginSchema>\n\nexport default function LoginPage() {\n  const router = useRouter()\n  const searchParams = useSearchParams()\n  const { toast } = useToast()\n  \n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [showPassword, setShowPassword] = useState(false)\n  const [serverError, setServerError] = useState('')\n  \n  // Get redirect URL from query params\n  const nextUrl = searchParams.get('next')\n  const errorParam = searchParams.get('error')\n\n  const form = useForm<LoginForm>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      email: '',\n      password: '',\n      rememberMe: false\n    }\n  })\n\n  // Show error message if redirected with error\n  useEffect(() => {\n    if (errorParam) {\n      const errorMessages: { [key: string]: string } = {\n        'unauthorized': '로그인이 필요한 페이지입니다',\n        'expired': '세션이 만료되었습니다. 다시 로그인해주세요',\n        'invalid': '잘못된 접근입니다'\n      }\n      setServerError(errorMessages[errorParam] || '인증 오류가 발생했습니다')\n    }\n  }, [errorParam])\n\n  const handleSubmit = async (data: LoginForm) => {\n    setIsSubmitting(true)\n    setServerError('')\n    \n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: data.email,\n          password: data.password,\n          rememberMe: data.rememberMe\n        })\n      })\n\n      const result = await response.json()\n\n      if (!response.ok) {\n        throw new Error(result.message || '로그인에 실패했습니다')\n      }\n\n      // Success - cookie should be set by the server\n      toast({\n        title: \"로그인 성공\",\n        description: \"정치생산성허브에 오신 것을 환영합니다.\",\n      })\n\n      // Redirect to next URL or dashboard\n      const redirectTo = nextUrl || '/'\n      router.push(redirectTo)\n\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : '로그인 중 오류가 발생했습니다'\n      setServerError(errorMessage)\n      \n      toast({\n        title: \"로그인 실패\",\n        description: errorMessage,\n        variant: \"destructive\",\n      })\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleSSOLogin = (provider: string) => {\n    const redirectUrl = nextUrl ? `?next=${encodeURIComponent(nextUrl)}` : ''\n    window.location.href = `/api/auth/sso/${provider}${redirectUrl}`\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4\">\n      <div className=\"w-full max-w-md space-y-6\">\n        {/* Logo and Title */}\n        <div className=\"text-center\">\n          <div className=\"mx-auto w-16 h-16 bg-blue-600 rounded-xl flex items-center justify-center mb-4\">\n            <Building className=\"h-8 w-8 text-white\" />\n          </div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">정치생산성허브</h1>\n          <p className=\"text-gray-600 mt-2\">계정에 로그인하여 시작하세요</p>\n        </div>\n\n        {/* Login Form */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <LogIn className=\"h-5 w-5\" />\n              로그인\n            </CardTitle>\n            <CardDescription>\n              이메일과 비밀번호를 입력해주세요\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {/* Server Error Alert */}\n            {serverError && (\n              <Alert className=\"mb-4 border-red-200 bg-red-50\">\n                <AlertCircle className=\"h-4 w-4 text-red-600\" />\n                <AlertDescription className=\"text-red-800\">\n                  {serverError}\n                </AlertDescription>\n              </Alert>\n            )}\n\n            <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-4\">\n              {/* Email */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\">이메일</Label>\n                <div className=\"relative\">\n                  <Mail className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    placeholder=\"example@email.com\"\n                    className=\"pl-10\"\n                    {...form.register('email')}\n                  />\n                </div>\n                {form.formState.errors.email && (\n                  <p className=\"text-sm text-red-600\">\n                    {form.formState.errors.email.message}\n                  </p>\n                )}\n              </div>\n\n              {/* Password */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"password\">비밀번호</Label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                  <Input\n                    id=\"password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"비밀번호를 입력하세요\"\n                    className=\"pl-10 pr-10\"\n                    {...form.register('password')}\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? (\n                      <EyeOff className=\"h-4 w-4 text-gray-400\" />\n                    ) : (\n                      <Eye className=\"h-4 w-4 text-gray-400\" />\n                    )}\n                  </Button>\n                </div>\n                {form.formState.errors.password && (\n                  <p className=\"text-sm text-red-600\">\n                    {form.formState.errors.password.message}\n                  </p>\n                )}\n              </div>\n\n              {/* Remember Me & Forgot Password */}\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id=\"rememberMe\"\n                    checked={form.watch('rememberMe')}\n                    onCheckedChange={(checked) => form.setValue('rememberMe', checked as boolean)}\n                  />\n                  <Label htmlFor=\"rememberMe\" className=\"text-sm\">\n                    로그인 상태 유지\n                  </Label>\n                </div>\n                <Link \n                  href={`/auth/reset-password${nextUrl ? `?next=${encodeURIComponent(nextUrl)}` : ''}`}\n                  className=\"text-sm text-blue-600 hover:text-blue-500\"\n                >\n                  비밀번호 찾기\n                </Link>\n              </div>\n\n              {/* Login Button */}\n              <Button type=\"submit\" className=\"w-full\" disabled={isSubmitting}>\n                {isSubmitting ? (\n                  <>\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\" />\n                    로그인 중...\n                  </>\n                ) : (\n                  <>\n                    로그인\n                    <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </>\n                )}\n              </Button>\n            </form>\n\n            {/* SSO Options */}\n            <div className=\"mt-6\">\n              <Separator className=\"mb-4\" />\n              <div className=\"text-center text-sm text-gray-500 mb-4\">\n                또는 다음으로 로그인\n              </div>\n              <div className=\"space-y-2\">\n                <Button \n                  type=\"button\" \n                  variant=\"outline\" \n                  className=\"w-full\"\n                  onClick={() => handleSSOLogin('google')}\n                >\n                  <svg className=\"w-4 h-4 mr-2\" viewBox=\"0 0 24 24\">\n                    <path fill=\"#4285F4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n                    <path fill=\"#34A853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n                    <path fill=\"#FBBC05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n                    <path fill=\"#EA4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n                  </svg>\n                  Google로 로그인\n                </Button>\n                <Button \n                  type=\"button\" \n                  variant=\"outline\" \n                  className=\"w-full\"\n                  onClick={() => handleSSOLogin('kakao')}\n                >\n                  <div className=\"w-4 h-4 mr-2 bg-yellow-400 rounded\" />\n                  카카오로 로그인\n                </Button>\n              </div>\n            </div>\n\n            {/* Sign Up Link */}\n            <div className=\"mt-6 text-center\">\n              <p className=\"text-sm text-gray-600\">\n                아직 계정이 없으신가요?{' '}\n                <Link \n                  href={`/auth/signup${nextUrl ? `?next=${encodeURIComponent(nextUrl)}` : ''}`}\n                  className=\"text-blue-600 hover:text-blue-500 font-medium\"\n                >\n                  회원가입\n                </Link>\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Footer */}\n        <div className=\"text-center text-xs text-gray-500\">\n          <p>로그인 시 <Link href=\"/terms\" className=\"underline\">이용약관</Link> 및 <Link href=\"/privacy\" className=\"underline\">개인정보처리방침</Link>에 동의한 것으로 간주됩니다.</p>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 935, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}