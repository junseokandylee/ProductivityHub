{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/lib/types/campaign-schedule.ts"],"sourcesContent":["// Campaign Scheduling Types\n\nexport enum ScheduleType {\n  Immediate = 0,\n  OneTime = 1,\n  Recurring = 2,\n  Triggered = 3\n}\n\nexport enum RecurrencePattern {\n  Daily = 1,\n  Weekly = 2,\n  Monthly = 3,\n  Yearly = 4,\n  Custom = 5\n}\n\nexport enum AutomationTrigger {\n  None = 0,\n  ContactAdded = 1,\n  ContactUpdated = 2,\n  ContactTagged = 3,\n  ContactBirthday = 4,\n  ContactAnniversary = 5,\n  CampaignCompleted = 6,\n  DateBased = 7,\n  CustomEvent = 8\n}\n\nexport enum ExecutionStatus {\n  Scheduled = 0,\n  Running = 1,\n  Completed = 2,\n  Failed = 3,\n  Cancelled = 4,\n  Skipped = 5,\n  Retrying = 6\n}\n\nexport interface SchedulingSettings {\n  scheduleType: ScheduleType;\n  scheduledAt?: Date;\n  timezone: string;\n\n  // Recurring schedule properties\n  isRecurring: boolean;\n  recurrencePattern?: RecurrencePattern;\n  recurrenceInterval: number;\n  recurrenceDaysOfWeek?: number[]; // [0-6] for Sun-Sat\n  recurrenceDayOfMonth?: number;\n  recurrenceEndDate?: Date;\n  maxOccurrences?: number;\n\n  // Automation properties\n  automationTrigger?: AutomationTrigger;\n  triggerConditions?: Record<string, any>;\n  triggerDelayMinutes: number;\n\n  priority: number;\n  notes?: string;\n}\n\nexport interface CreateCampaignScheduleRequest {\n  campaignId: string;\n  scheduleType: ScheduleType;\n  scheduledAt?: string; // ISO string\n  timezone: string;\n\n  // Recurring schedule properties\n  isRecurring: boolean;\n  recurrencePattern?: RecurrencePattern;\n  recurrenceInterval: number;\n  recurrenceDaysOfWeek?: number[];\n  recurrenceDayOfMonth?: number;\n  recurrenceEndDate?: string; // ISO string\n  maxOccurrences?: number;\n\n  // Automation properties\n  automationTrigger?: AutomationTrigger;\n  triggerConditions?: Record<string, any>;\n  triggerDelayMinutes: number;\n\n  priority: number;\n  notes?: string;\n}\n\nexport interface UpdateCampaignScheduleRequest {\n  scheduleType: ScheduleType;\n  scheduledAt?: string; // ISO string\n  timezone: string;\n\n  // Recurring schedule properties\n  isRecurring: boolean;\n  recurrencePattern?: RecurrencePattern;\n  recurrenceInterval: number;\n  recurrenceDaysOfWeek?: number[];\n  recurrenceDayOfMonth?: number;\n  recurrenceEndDate?: string; // ISO string\n  maxOccurrences?: number;\n\n  // Automation properties\n  automationTrigger?: AutomationTrigger;\n  triggerConditions?: Record<string, any>;\n  triggerDelayMinutes: number;\n\n  priority: number;\n  notes?: string;\n}\n\nexport interface CampaignScheduleResponse {\n  id: string;\n  campaignId: string;\n  campaignName: string;\n  scheduleType: ScheduleType;\n  scheduledAt?: string; // ISO string\n  timezone: string;\n\n  // Recurring schedule properties\n  isRecurring: boolean;\n  recurrencePattern?: RecurrencePattern;\n  recurrenceInterval: number;\n  recurrenceDaysOfWeek?: number[];\n  recurrenceDayOfMonth?: number;\n  recurrenceEndDate?: string; // ISO string\n  maxOccurrences?: number;\n  occurrenceCount: number;\n\n  // Automation properties\n  automationTrigger?: AutomationTrigger;\n  triggerConditions?: Record<string, any>;\n  triggerDelayMinutes: number;\n\n  // Status properties\n  isActive: boolean;\n  nextExecution?: string; // ISO string\n  lastExecution?: string; // ISO string\n  executionCount: number;\n  priority: number;\n  notes?: string;\n\n  // Audit properties\n  createdAt: string; // ISO string\n  createdBy: string;\n  createdByName: string;\n  updatedAt: string; // ISO string\n  updatedBy?: string;\n  updatedByName?: string;\n\n  // Related executions summary\n  totalExecutions: number;\n  completedExecutions: number;\n  failedExecutions: number;\n  lastExecutionDate?: string; // ISO string\n  lastExecutionStatus?: ExecutionStatus;\n}\n\nexport interface CampaignTemplate {\n  id: string;\n  name: string;\n  description?: string;\n  messageTitleTemplate?: string;\n  messageBodyTemplate: string;\n  templateVariables?: Record<string, string>;\n  defaultChannels?: string[];\n  defaultPriority: number;\n  category?: string;\n  tags?: string[];\n  isPublic: boolean;\n  usageCount: number;\n  lastUsed?: string; // ISO string\n  isActive: boolean;\n  createdAt: string; // ISO string\n  createdBy: string;\n  createdByName: string;\n  updatedAt: string; // ISO string\n  updatedBy?: string;\n  updatedByName?: string;\n}\n\nexport interface UpcomingExecutionItem {\n  scheduleId: string;\n  campaignId: string;\n  campaignName: string;\n  scheduledExecution: string; // ISO string\n  scheduleType: ScheduleType;\n  isRecurring: boolean;\n  timezone: string;\n  priority: number;\n}\n\n// Frontend-specific types for the scheduling UI\nexport interface SchedulingFormData {\n  scheduleType: ScheduleType;\n  scheduledDate?: Date;\n  scheduledTime?: string; // HH:MM format\n  timezone: string;\n\n  // Recurring options\n  isRecurring: boolean;\n  recurrencePattern: RecurrencePattern;\n  recurrenceInterval: number;\n  selectedDaysOfWeek: number[];\n  dayOfMonth: number;\n  recurrenceEndType: 'never' | 'date' | 'occurrences';\n  recurrenceEndDate?: Date;\n  maxOccurrences: number;\n\n  // Automation options\n  useAutomation: boolean;\n  automationTrigger: AutomationTrigger;\n  triggerDelay: number; // in minutes\n  triggerConditions: Record<string, any>;\n\n  priority: number;\n  notes: string;\n}\n\nexport const DEFAULT_SCHEDULING_SETTINGS: SchedulingFormData = {\n  scheduleType: ScheduleType.Immediate,\n  timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n  isRecurring: false,\n  recurrencePattern: RecurrencePattern.Daily,\n  recurrenceInterval: 1,\n  selectedDaysOfWeek: [],\n  dayOfMonth: 1,\n  recurrenceEndType: 'never',\n  maxOccurrences: 10,\n  useAutomation: false,\n  automationTrigger: AutomationTrigger.None,\n  triggerDelay: 0,\n  triggerConditions: {},\n  priority: 5,\n  notes: ''\n};\n\nexport const SCHEDULE_TYPE_LABELS: Record<ScheduleType, string> = {\n  [ScheduleType.Immediate]: '즉시 발송',\n  [ScheduleType.OneTime]: '예약 발송',\n  [ScheduleType.Recurring]: '반복 발송',\n  [ScheduleType.Triggered]: '자동화 발송'\n};\n\nexport const RECURRENCE_PATTERN_LABELS: Record<RecurrencePattern, string> = {\n  [RecurrencePattern.Daily]: '매일',\n  [RecurrencePattern.Weekly]: '매주',\n  [RecurrencePattern.Monthly]: '매월',\n  [RecurrencePattern.Yearly]: '매년',\n  [RecurrencePattern.Custom]: '사용자 정의'\n};\n\nexport const AUTOMATION_TRIGGER_LABELS: Record<AutomationTrigger, string> = {\n  [AutomationTrigger.None]: '없음',\n  [AutomationTrigger.ContactAdded]: '연락처 추가 시',\n  [AutomationTrigger.ContactUpdated]: '연락처 수정 시',\n  [AutomationTrigger.ContactTagged]: '태그 지정 시',\n  [AutomationTrigger.ContactBirthday]: '생일',\n  [AutomationTrigger.ContactAnniversary]: '기념일',\n  [AutomationTrigger.CampaignCompleted]: '캠페인 완료 후',\n  [AutomationTrigger.DateBased]: '날짜 기반',\n  [AutomationTrigger.CustomEvent]: '사용자 정의 이벤트'\n};\n\nexport const DAYS_OF_WEEK_LABELS = [\n  '일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'\n];\n\nexport const COMMON_TIMEZONES = [\n  { value: 'Asia/Seoul', label: '한국 표준시 (KST)' },\n  { value: 'UTC', label: '협정 세계시 (UTC)' },\n  { value: 'America/New_York', label: '미국 동부시간 (EST/EDT)' },\n  { value: 'America/Los_Angeles', label: '미국 서부시간 (PST/PDT)' },\n  { value: 'Europe/London', label: '영국 표준시 (GMT/BST)' },\n  { value: 'Asia/Tokyo', label: '일본 표준시 (JST)' },\n  { value: 'Asia/Shanghai', label: '중국 표준시 (CST)' }\n];"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;;;;;;;;AAErB,IAAA,AAAK,sCAAA;;;;;WAAA;;AAOL,IAAA,AAAK,2CAAA;;;;;;WAAA;;AAQL,IAAA,AAAK,2CAAA;;;;;;;;;;WAAA;;AAYL,IAAA,AAAK,yCAAA;;;;;;;;WAAA;;AA4LL,MAAM,8BAAkD;IAC7D,YAAY;IACZ,UAAU,KAAK,cAAc,GAAG,eAAe,GAAG,QAAQ;IAC1D,aAAa;IACb,iBAAiB;IACjB,oBAAoB;IACpB,oBAAoB,EAAE;IACtB,YAAY;IACZ,mBAAmB;IACnB,gBAAgB;IAChB,eAAe;IACf,iBAAiB;IACjB,cAAc;IACd,mBAAmB,CAAC;IACpB,UAAU;IACV,OAAO;AACT;AAEO,MAAM,uBAAqD;IAChE,GAAwB,EAAE;IAC1B,GAAsB,EAAE;IACxB,GAAwB,EAAE;IAC1B,GAAwB,EAAE;AAC5B;AAEO,MAAM,4BAA+D;IAC1E,GAAyB,EAAE;IAC3B,GAA0B,EAAE;IAC5B,GAA2B,EAAE;IAC7B,GAA0B,EAAE;IAC5B,GAA0B,EAAE;AAC9B;AAEO,MAAM,4BAA+D;IAC1E,GAAwB,EAAE;IAC1B,GAAgC,EAAE;IAClC,GAAkC,EAAE;IACpC,GAAiC,EAAE;IACnC,GAAmC,EAAE;IACrC,GAAsC,EAAE;IACxC,GAAqC,EAAE;IACvC,GAA6B,EAAE;IAC/B,GAA+B,EAAE;AACnC;AAEO,MAAM,sBAAsB;IACjC;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;CAC3C;AAEM,MAAM,mBAAmB;IAC9B;QAAE,OAAO;QAAc,OAAO;IAAe;IAC7C;QAAE,OAAO;QAAO,OAAO;IAAe;IACtC;QAAE,OAAO;QAAoB,OAAO;IAAoB;IACxD;QAAE,OAAO;QAAuB,OAAO;IAAoB;IAC3D;QAAE,OAAO;QAAiB,OAAO;IAAmB;IACpD;QAAE,OAAO;QAAc,OAAO;IAAe;IAC7C;QAAE,OAAO;QAAiB,OAAO;IAAe;CACjD"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/lib/types/campaign-wizard.ts"],"sourcesContent":["// Campaign Wizard Types and Interfaces\nimport { SchedulingSettings, DEFAULT_SCHEDULING_SETTINGS, ScheduleType } from './campaign-schedule';\n\nexport interface AudienceSelection {\n  groupIds: string[];\n  segmentIds: string[];\n  filterJson: Record<string, any>;\n  includeAll: boolean;\n  estimatedCount?: number;\n}\n\nexport interface MessageComposition {\n  name: string;\n  messageTitle?: string;\n  messageBody: string;\n  variables: Record<string, string>;\n}\n\nexport interface ChannelSettings {\n  channels: Array<{\n    channel: string;\n    isEnabled: boolean;\n  }>;\n  channelOrder: string[];\n  fallbackEnabled: boolean;\n}\n\nexport interface ReviewData {\n  estimatedCost: number;\n  recipientCount: number;\n  quotaOk: boolean;\n  scheduledAt?: Date;\n}\n\nexport interface SchedulingData {\n  scheduling: SchedulingSettings;\n}\n\nexport interface CampaignWizardState {\n  currentStep: number;\n  audience: AudienceSelection;\n  message: MessageComposition;\n  channels: ChannelSettings;\n  scheduling: SchedulingSettings;\n  review: ReviewData;\n  isSubmitting: boolean;\n  errors: Record<string, string[]>;\n}\n\nexport type WizardStep = 1 | 2 | 3 | 4 | 5;\n\nexport interface StepValidation {\n  isValid: boolean;\n  errors: string[];\n}\n\n// Action types for the wizard reducer\nexport type WizardAction =\n  | { type: 'SET_STEP'; payload: WizardStep }\n  | { type: 'SET_AUDIENCE'; payload: Partial<AudienceSelection> }\n  | { type: 'SET_MESSAGE'; payload: Partial<MessageComposition> }\n  | { type: 'SET_CHANNELS'; payload: Partial<ChannelSettings> }\n  | { type: 'SET_SCHEDULING'; payload: Partial<SchedulingSettings> }\n  | { type: 'SET_REVIEW'; payload: Partial<ReviewData> }\n  | { type: 'SET_SUBMITTING'; payload: boolean }\n  | { type: 'SET_ERRORS'; payload: { step: WizardStep; errors: string[] } }\n  | { type: 'CLEAR_ERRORS'; payload: WizardStep }\n  | { type: 'RESET_WIZARD' }\n  | { type: 'HYDRATE_STATE'; payload: Partial<CampaignWizardState> };\n\n// Step configuration\nexport interface StepConfig {\n  step: WizardStep;\n  title: string;\n  description: string;\n  isOptional?: boolean;\n}\n\nexport const WIZARD_STEPS: StepConfig[] = [\n  {\n    step: 1,\n    title: 'Audience Selection',\n    description: 'Select who will receive your campaign'\n  },\n  {\n    step: 2,\n    title: 'Message Composition',\n    description: 'Create your campaign message'\n  },\n  {\n    step: 3,\n    title: 'Channel Settings',\n    description: 'Configure delivery channels and priority'\n  },\n  {\n    step: 4,\n    title: 'Scheduling',\n    description: 'Set when your campaign should be sent'\n  },\n  {\n    step: 5,\n    title: 'Review & Send',\n    description: 'Review your campaign and send'\n  }\n];\n\n// Initial state\nexport const initialWizardState: CampaignWizardState = {\n  currentStep: 1,\n  audience: {\n    groupIds: [],\n    segmentIds: [],\n    filterJson: {},\n    includeAll: false\n  },\n  message: {\n    name: '',\n    messageTitle: '',\n    messageBody: '',\n    variables: {}\n  },\n  channels: {\n    channels: [\n      { channel: 'SMS', isEnabled: true },\n      { channel: 'KAKAO', isEnabled: true },\n      { channel: 'EMAIL', isEnabled: false }\n    ],\n    channelOrder: ['SMS', 'KAKAO'],\n    fallbackEnabled: true\n  },\n  scheduling: {\n    scheduleType: ScheduleType.Immediate,\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    isRecurring: false,\n    triggerDelayMinutes: 0,\n    priority: 5\n  },\n  review: {\n    estimatedCost: 0,\n    recipientCount: 0,\n    quotaOk: true\n  },\n  isSubmitting: false,\n  errors: {}\n};"],"names":[],"mappings":"AAAA,uCAAuC;;;;;AACvC;;AA6EO,MAAM,eAA6B;IACxC;QACE,MAAM;QACN,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;IACf;CACD;AAGM,MAAM,qBAA0C;IACrD,aAAa;IACb,UAAU;QACR,UAAU,EAAE;QACZ,YAAY,EAAE;QACd,YAAY,CAAC;QACb,YAAY;IACd;IACA,SAAS;QACP,MAAM;QACN,cAAc;QACd,aAAa;QACb,WAAW,CAAC;IACd;IACA,UAAU;QACR,UAAU;YACR;gBAAE,SAAS;gBAAO,WAAW;YAAK;YAClC;gBAAE,SAAS;gBAAS,WAAW;YAAK;YACpC;gBAAE,SAAS;gBAAS,WAAW;YAAM;SACtC;QACD,cAAc;YAAC;YAAO;SAAQ;QAC9B,iBAAiB;IACnB;IACA,YAAY;QACV,cAAc,0JAAA,CAAA,eAAY,CAAC,SAAS;QACpC,UAAU,KAAK,cAAc,GAAG,eAAe,GAAG,QAAQ;QAC1D,aAAa;QACb,qBAAqB;QACrB,UAAU;IACZ;IACA,QAAQ;QACN,eAAe;QACf,gBAAgB;QAChB,SAAS;IACX;IACA,cAAc;IACd,QAAQ,CAAC;AACX"}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/lib/context/campaign-wizard-context.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { \n  CampaignWizardState, \n  WizardAction, \n  WizardStep,\n  initialWizardState,\n  StepValidation \n} from '../types/campaign-wizard';\n\n// Wizard Context\ninterface WizardContextType {\n  state: CampaignWizardState;\n  dispatch: React.Dispatch<WizardAction>;\n  goToStep: (step: WizardStep) => void;\n  goToNextStep: () => void;\n  goToPreviousStep: () => void;\n  validateCurrentStep: () => StepValidation;\n  canGoToStep: (step: WizardStep) => boolean;\n  resetWizard: () => void;\n  saveToSessionStorage: () => void;\n  loadFromSessionStorage: () => void;\n}\n\nconst WizardContext = createContext<WizardContextType | undefined>(undefined);\n\n// Wizard Reducer\nfunction wizardReducer(state: CampaignWizardState, action: WizardAction): CampaignWizardState {\n  switch (action.type) {\n    case 'SET_STEP':\n      return { ...state, currentStep: action.payload };\n    \n    case 'SET_AUDIENCE':\n      return { \n        ...state, \n        audience: { ...state.audience, ...action.payload }\n      };\n    \n    case 'SET_MESSAGE':\n      return { \n        ...state, \n        message: { ...state.message, ...action.payload }\n      };\n    \n    case 'SET_CHANNELS':\n      return { \n        ...state, \n        channels: { ...state.channels, ...action.payload }\n      };\n    \n    case 'SET_REVIEW':\n      return { \n        ...state, \n        review: { ...state.review, ...action.payload }\n      };\n    \n    case 'SET_SUBMITTING':\n      return { ...state, isSubmitting: action.payload };\n    \n    case 'SET_ERRORS':\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          [action.payload.step]: action.payload.errors\n        }\n      };\n    \n    case 'CLEAR_ERRORS':\n      const newErrors = { ...state.errors };\n      delete newErrors[action.payload];\n      return { ...state, errors: newErrors };\n    \n    case 'RESET_WIZARD':\n      return { ...initialWizardState };\n    \n    case 'HYDRATE_STATE':\n      return { ...state, ...action.payload };\n    \n    default:\n      return state;\n  }\n}\n\n// Session Storage Key\nconst WIZARD_STORAGE_KEY = 'campaign-wizard-state';\n\n// Wizard Provider Component\ninterface WizardProviderProps {\n  children: ReactNode;\n}\n\nexport function WizardProvider({ children }: WizardProviderProps) {\n  const [state, dispatch] = useReducer(wizardReducer, initialWizardState);\n\n  // Navigation functions\n  const goToStep = (step: WizardStep) => {\n    if (canGoToStep(step)) {\n      dispatch({ type: 'SET_STEP', payload: step });\n    }\n  };\n\n  const goToNextStep = () => {\n    const validation = validateCurrentStep();\n    if (validation.isValid && state.currentStep < 4) {\n      dispatch({ type: 'SET_STEP', payload: (state.currentStep + 1) as WizardStep });\n    } else if (!validation.isValid) {\n      dispatch({ \n        type: 'SET_ERRORS', \n        payload: { step: state.currentStep as WizardStep, errors: validation.errors }\n      });\n    }\n  };\n\n  const goToPreviousStep = () => {\n    if (state.currentStep > 1) {\n      dispatch({ type: 'SET_STEP', payload: (state.currentStep - 1) as WizardStep });\n    }\n  };\n\n  // Validation logic\n  const validateCurrentStep = (): StepValidation => {\n    const errors: string[] = [];\n\n    switch (state.currentStep) {\n      case 1: // Audience Selection\n        if (!state.audience.includeAll && \n            state.audience.groupIds.length === 0 && \n            state.audience.segmentIds.length === 0 &&\n            Object.keys(state.audience.filterJson).length === 0) {\n          errors.push('Please select at least one audience group, segment, or filter');\n        }\n        break;\n\n      case 2: // Message Composition\n        if (!state.message.name.trim()) {\n          errors.push('Campaign name is required');\n        }\n        if (!state.message.messageBody.trim()) {\n          errors.push('Message content is required');\n        }\n        if (state.message.messageBody.length > 2000) {\n          errors.push('Message content must be less than 2000 characters');\n        }\n        break;\n\n      case 3: // Channel Settings\n        if (state.channels.channelOrder.length === 0) {\n          errors.push('At least one channel must be selected');\n        }\n        break;\n\n      case 4: // Review & Send\n        if (!state.review.quotaOk) {\n          errors.push('Campaign exceeds monthly quota limit');\n        }\n        break;\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  };\n\n  // Permission logic for step navigation\n  const canGoToStep = (step: WizardStep): boolean => {\n    // Always allow going to step 1\n    if (step === 1) return true;\n    \n    // For other steps, validate previous steps\n    for (let i = 1; i < step; i++) {\n      const tempState = { ...state, currentStep: i };\n      const validation = validateStepForState(tempState, i as WizardStep);\n      if (!validation.isValid) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Helper function to validate a specific step with given state\n  const validateStepForState = (checkState: CampaignWizardState, step: WizardStep): StepValidation => {\n    const errors: string[] = [];\n\n    switch (step) {\n      case 1:\n        if (!checkState.audience.includeAll && \n            checkState.audience.groupIds.length === 0 && \n            checkState.audience.segmentIds.length === 0 &&\n            Object.keys(checkState.audience.filterJson).length === 0) {\n          errors.push('Audience selection required');\n        }\n        break;\n      case 2:\n        if (!checkState.message.name.trim() || !checkState.message.messageBody.trim()) {\n          errors.push('Message composition required');\n        }\n        break;\n      case 3:\n        if (checkState.channels.channels.length === 0) {\n          errors.push('Channel configuration required');\n        }\n        break;\n    }\n\n    return { isValid: errors.length === 0, errors };\n  };\n\n  const resetWizard = () => {\n    dispatch({ type: 'RESET_WIZARD' });\n    sessionStorage.removeItem(WIZARD_STORAGE_KEY);\n  };\n\n  // Session Storage functions\n  const saveToSessionStorage = () => {\n    try {\n      const stateToSave = {\n        currentStep: state.currentStep,\n        audience: state.audience,\n        message: state.message,\n        channels: state.channels,\n        review: state.review\n      };\n      sessionStorage.setItem(WIZARD_STORAGE_KEY, JSON.stringify(stateToSave));\n    } catch (error) {\n      console.warn('Failed to save wizard state to session storage:', error);\n    }\n  };\n\n  const loadFromSessionStorage = () => {\n    try {\n      const savedState = sessionStorage.getItem(WIZARD_STORAGE_KEY);\n      if (savedState) {\n        const parsedState = JSON.parse(savedState);\n        dispatch({ type: 'HYDRATE_STATE', payload: parsedState });\n      }\n    } catch (error) {\n      console.warn('Failed to load wizard state from session storage:', error);\n    }\n  };\n\n  // Auto-save to session storage on state changes\n  useEffect(() => {\n    saveToSessionStorage();\n  }, [state.audience, state.message, state.channels, state.review, state.currentStep]);\n\n  // Load from session storage on mount\n  useEffect(() => {\n    loadFromSessionStorage();\n  }, []);\n\n  const contextValue: WizardContextType = {\n    state,\n    dispatch,\n    goToStep,\n    goToNextStep,\n    goToPreviousStep,\n    validateCurrentStep,\n    canGoToStep,\n    resetWizard,\n    saveToSessionStorage,\n    loadFromSessionStorage\n  };\n\n  return (\n    <WizardContext.Provider value={contextValue}>\n      {children}\n    </WizardContext.Provider>\n  );\n}\n\n// Custom hook to use wizard context\nexport function useWizard(): WizardContextType {\n  const context = useContext(WizardContext);\n  if (context === undefined) {\n    throw new Error('useWizard must be used within a WizardProvider');\n  }\n  return context;\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 534, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 540, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        warning: \"border-orange-500/50 bg-orange-50 text-orange-800 dark:border-orange-500 dark:bg-orange-950 dark:text-orange-200 [&>svg]:text-orange-600\",\n        info: \"border-blue-500/50 bg-blue-50 text-blue-800 dark:border-blue-500 dark:bg-blue-950 dark:text-blue-200 [&>svg]:text-blue-600\",\n        success: \"border-green-500/50 bg-green-50 text-green-800 dark:border-green-500 dark:bg-green-950 dark:text-green-200 [&>svg]:text-green-600\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,+KAAA,CAAA,MAAG,AAAD,EACtB,2KACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SAAS;YACT,MAAM;YACN,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,0KAAM,UAAU,MAG5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,yMAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,0KAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,0KAAM,UAAU,OAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG"}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/lib/context/campaign-error-context.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { UserFriendlyError } from '@/lib/utils/error-handling';\nimport { Alert, AlertTitle, AlertDescription } from '@/components/ui/alert';\nimport { Button } from '@/components/ui/button';\nimport { X, AlertCircle, AlertTriangle, Info, CheckCircle } from 'lucide-react';\n\n// Error context interface\ninterface CampaignErrorContextType {\n  // Global error state\n  globalError: UserFriendlyError | null;\n  setGlobalError: (error: UserFriendlyError | null) => void;\n  clearGlobalError: () => void;\n  \n  // Step-specific errors\n  stepErrors: Record<number, UserFriendlyError[]>;\n  addStepError: (step: number, error: UserFriendlyError) => void;\n  removeStepError: (step: number, index: number) => void;\n  clearStepErrors: (step: number) => void;\n  clearAllStepErrors: () => void;\n  \n  // Loading states\n  isLoading: boolean;\n  loadingMessage: string | null;\n  setLoading: (loading: boolean, message?: string) => void;\n  \n  // Network status\n  isOnline: boolean;\n}\n\n// Create context\nconst CampaignErrorContext = createContext<CampaignErrorContextType | undefined>(undefined);\n\n// Hook to use error context\nexport function useCampaignError() {\n  const context = useContext(CampaignErrorContext);\n  if (context === undefined) {\n    throw new Error('useCampaignError must be used within a CampaignErrorProvider');\n  }\n  return context;\n}\n\n// Error display component\ninterface ErrorDisplayProps {\n  error: UserFriendlyError;\n  onClose?: () => void;\n  className?: string;\n}\n\nexport function ErrorDisplay({ error, onClose, className }: ErrorDisplayProps) {\n  const getIcon = () => {\n    switch (error.severity) {\n      case 'error':\n        return <AlertCircle className=\"h-4 w-4\" />;\n      case 'warning':\n        return <AlertTriangle className=\"h-4 w-4\" />;\n      case 'info':\n        return <Info className=\"h-4 w-4\" />;\n      default:\n        return <AlertCircle className=\"h-4 w-4\" />;\n    }\n  };\n\n  const getVariant = () => {\n    switch (error.severity) {\n      case 'error':\n        return 'destructive';\n      case 'warning':\n        return 'warning';\n      case 'info':\n        return 'info';\n      default:\n        return 'destructive';\n    }\n  };\n\n  return (\n    <Alert variant={getVariant()} className={className}>\n      {getIcon()}\n      <div className=\"flex-1\">\n        <AlertTitle>{error.title}</AlertTitle>\n        <AlertDescription>{error.message}</AlertDescription>\n      </div>\n      {onClose && (\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          className=\"absolute right-2 top-2 h-8 w-8 p-0\"\n          onClick={onClose}\n        >\n          <X className=\"h-4 w-4\" />\n        </Button>\n      )}\n    </Alert>\n  );\n}\n\n// Loading display component\ninterface LoadingDisplayProps {\n  message: string;\n  className?: string;\n}\n\nexport function LoadingDisplay({ message, className }: LoadingDisplayProps) {\n  return (\n    <Alert variant=\"info\" className={className}>\n      <div className=\"flex items-center gap-3\">\n        <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-blue-600 border-t-transparent\"></div>\n        <AlertDescription>{message}</AlertDescription>\n      </div>\n    </Alert>\n  );\n}\n\n// Provider component\ninterface CampaignErrorProviderProps {\n  children: React.ReactNode;\n}\n\nexport function CampaignErrorProvider({ children }: CampaignErrorProviderProps) {\n  const [globalError, setGlobalError] = useState<UserFriendlyError | null>(null);\n  const [stepErrors, setStepErrors] = useState<Record<number, UserFriendlyError[]>>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState<string | null>(null);\n  const [isOnline, setIsOnline] = useState(true);\n\n  // Handle online/offline status\n  useEffect(() => {\n    const handleOnline = () => {\n      setIsOnline(true);\n      // Clear network-related errors when coming back online\n      if (globalError?.title.includes('네트워크')) {\n        setGlobalError(null);\n      }\n    };\n    \n    const handleOffline = () => {\n      setIsOnline(false);\n      setGlobalError({\n        title: '네트워크 연결 없음',\n        message: '인터넷 연결을 확인해주세요.',\n        severity: 'warning',\n        actionable: false,\n        retryable: true,\n      });\n    };\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    // Check initial status\n    setIsOnline(navigator.onLine);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, [globalError]);\n\n  const clearGlobalError = useCallback(() => {\n    setGlobalError(null);\n  }, []);\n\n  const addStepError = useCallback((step: number, error: UserFriendlyError) => {\n    setStepErrors(prev => ({\n      ...prev,\n      [step]: [...(prev[step] || []), error]\n    }));\n  }, []);\n\n  const removeStepError = useCallback((step: number, index: number) => {\n    setStepErrors(prev => ({\n      ...prev,\n      [step]: (prev[step] || []).filter((_, i) => i !== index)\n    }));\n  }, []);\n\n  const clearStepErrors = useCallback((step: number) => {\n    setStepErrors(prev => {\n      const updated = { ...prev };\n      delete updated[step];\n      return updated;\n    });\n  }, []);\n\n  const clearAllStepErrors = useCallback(() => {\n    setStepErrors({});\n  }, []);\n\n  const setLoading = useCallback((loading: boolean, message?: string) => {\n    setIsLoading(loading);\n    setLoadingMessage(message || null);\n  }, []);\n\n  const contextValue: CampaignErrorContextType = {\n    globalError,\n    setGlobalError,\n    clearGlobalError,\n    stepErrors,\n    addStepError,\n    removeStepError,\n    clearStepErrors,\n    clearAllStepErrors,\n    isLoading,\n    loadingMessage,\n    setLoading,\n    isOnline,\n  };\n\n  return (\n    <CampaignErrorContext.Provider value={contextValue}>\n      {/* Global error display */}\n      {globalError && (\n        <div className=\"fixed top-4 right-4 z-50 max-w-md\">\n          <ErrorDisplay\n            error={globalError}\n            onClose={clearGlobalError}\n          />\n        </div>\n      )}\n      \n      {/* Global loading display */}\n      {isLoading && loadingMessage && (\n        <div className=\"fixed top-4 left-1/2 transform -translate-x-1/2 z-40 max-w-md\">\n          <LoadingDisplay message={loadingMessage} />\n        </div>\n      )}\n      \n      {/* Offline notification */}\n      {!isOnline && !globalError && (\n        <div className=\"fixed bottom-4 left-4 z-50 max-w-md\">\n          <Alert variant=\"warning\">\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertTitle>오프라인 상태</AlertTitle>\n            <AlertDescription>\n              인터넷 연결이 끊어졌습니다. 연결이 복구되면 자동으로 재시도됩니다.\n            </AlertDescription>\n          </Alert>\n        </div>\n      )}\n      \n      {children}\n    </CampaignErrorContext.Provider>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 987, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 993, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/stepper.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { cn } from '@/lib/utils';\nimport { WizardStep, WIZARD_STEPS } from '@/lib/types/campaign-wizard';\nimport { Check, ChevronRight } from 'lucide-react';\n\ninterface StepperProps {\n  currentStep: WizardStep;\n  completedSteps: WizardStep[];\n  canGoToStep: (step: WizardStep) => boolean;\n  onStepClick: (step: WizardStep) => void;\n  className?: string;\n}\n\nexport function Stepper({ \n  currentStep, \n  completedSteps, \n  canGoToStep, \n  onStepClick,\n  className \n}: StepperProps) {\n  return (\n    <nav \n      aria-label=\"Campaign creation progress\"\n      className={cn(\"w-full\", className)}\n    >\n      <ol className=\"flex items-center justify-between\">\n        {WIZARD_STEPS.map((step, index) => {\n          const isCompleted = completedSteps.includes(step.step);\n          const isCurrent = step.step === currentStep;\n          const isClickable = canGoToStep(step.step);\n          const isLastStep = index === WIZARD_STEPS.length - 1;\n\n          return (\n            <li key={step.step} className=\"flex items-center flex-1\">\n              {/* Step Circle and Content */}\n              <div className=\"flex flex-col items-center flex-1\">\n                <button\n                  onClick={() => isClickable && onStepClick(step.step)}\n                  disabled={!isClickable}\n                  className={cn(\n                    \"relative flex items-center justify-center w-10 h-10 rounded-full border-2 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",\n                    {\n                      // Completed step\n                      \"bg-green-500 border-green-500 text-white hover:bg-green-600\": \n                        isCompleted,\n                      // Current step\n                      \"bg-blue-500 border-blue-500 text-white\": \n                        isCurrent && !isCompleted,\n                      // Future step (accessible)\n                      \"border-gray-300 text-gray-500 hover:border-gray-400 hover:text-gray-700 cursor-pointer\": \n                        !isCurrent && !isCompleted && isClickable,\n                      // Future step (not accessible)\n                      \"border-gray-200 text-gray-300 cursor-not-allowed\": \n                        !isCurrent && !isCompleted && !isClickable\n                    }\n                  )}\n                  aria-current={isCurrent ? \"step\" : undefined}\n                  aria-label={`${step.title}. Step ${step.step} of ${WIZARD_STEPS.length}`}\n                >\n                  {isCompleted ? (\n                    <Check className=\"w-5 h-5\" aria-hidden=\"true\" />\n                  ) : (\n                    <span className=\"text-sm font-medium\">{step.step}</span>\n                  )}\n                </button>\n\n                {/* Step Title and Description */}\n                <div className=\"mt-2 text-center max-w-[120px]\">\n                  <div\n                    className={cn(\n                      \"text-xs font-medium leading-tight\",\n                      {\n                        \"text-green-600\": isCompleted,\n                        \"text-blue-600\": isCurrent && !isCompleted,\n                        \"text-gray-900\": !isCurrent && !isCompleted && isClickable,\n                        \"text-gray-400\": !isCurrent && !isCompleted && !isClickable\n                      }\n                    )}\n                  >\n                    {step.title}\n                  </div>\n                  <div\n                    className={cn(\n                      \"text-xs text-gray-500 mt-1\",\n                      {\n                        \"text-gray-600\": isCompleted || isCurrent,\n                        \"text-gray-400\": !isCurrent && !isCompleted && !isClickable\n                      }\n                    )}\n                  >\n                    {step.description}\n                  </div>\n                </div>\n              </div>\n\n              {/* Connector Line */}\n              {!isLastStep && (\n                <div\n                  className={cn(\n                    \"flex-1 h-0.5 mx-4 transition-colors duration-200\",\n                    {\n                      \"bg-green-500\": completedSteps.includes((step.step + 1) as WizardStep),\n                      \"bg-gray-300\": !completedSteps.includes((step.step + 1) as WizardStep)\n                    }\n                  )}\n                  aria-hidden=\"true\"\n                />\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n\n// Compact horizontal stepper for mobile\ninterface CompactStepperProps {\n  currentStep: WizardStep;\n  totalSteps: number;\n  className?: string;\n}\n\nexport function CompactStepper({ currentStep, totalSteps, className }: CompactStepperProps) {\n  return (\n    <div className={cn(\"flex items-center justify-center space-x-2\", className)}>\n      <span className=\"text-sm font-medium text-gray-600\">\n        Step {currentStep} of {totalSteps}\n      </span>\n      <div className=\"flex space-x-1\">\n        {Array.from({ length: totalSteps }, (_, index) => {\n          const stepNumber = index + 1;\n          const isActive = stepNumber === currentStep;\n          const isCompleted = stepNumber < currentStep;\n\n          return (\n            <div\n              key={stepNumber}\n              className={cn(\n                \"w-2 h-2 rounded-full transition-colors duration-200\",\n                {\n                  \"bg-blue-500\": isActive,\n                  \"bg-green-500\": isCompleted,\n                  \"bg-gray-300\": !isActive && !isCompleted\n                }\n              )}\n              aria-hidden=\"true\"\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1190, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,0KAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,0KAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,0KAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,0KAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,0KAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,0KAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 1287, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1293, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { Check } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className,\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n"],"names":[],"mappings":";;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,yBAAW,0KAAM,UAAU,MAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC,oLAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,yMAAC,oLAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,yMAAC,mNAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oLAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 1339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1345, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,+KAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,0KAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC,iLAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,iLAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 1378, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1384, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/lib/api/contacts.ts"],"sourcesContent":["import axios from 'axios';\nimport { ContactSearchParams, ContactSearchResponse, Contact, Tag, CreateContactRequest, UpdateContactRequest, ContactHistory, ContactHistorySearchRequest } from '@/lib/types/contact';\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5284';\n\nexport interface ContactGroup {\n  id: string;\n  name: string;\n  description?: string;\n  count: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface ContactSegment {\n  id: string;\n  name: string;\n  description?: string;\n  count: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface EstimateAudienceRequest {\n  groupIds: string[];\n  segmentIds: string[];\n  filterJson?: Record<string, any>;\n}\n\nexport interface EstimateAudienceResponse {\n  totalContacts: number;\n  uniqueContacts: number;\n  breakdownBySource: Record<string, number>;\n}\n\nexport interface SampleContactRequest {\n  groupIds: string[];\n  segmentIds: string[];\n  filterJson?: Record<string, any>;\n}\n\nexport interface SampleContactResponse {\n  name: string;\n  phone?: string;\n  email?: string;\n  personalizationData: Record<string, string>;\n}\n\nexport interface PreviewTemplateRequest {\n  messageBody: string;\n  title?: string;\n  variables: Record<string, string>;\n}\n\nexport interface PreviewTemplateResponse {\n  renderedBody: string;\n  renderedTitle?: string;\n  missingVariables: string[];\n  characterCount: number;\n}\n\nexport interface ChannelStatusResponse {\n  channel: string;\n  isEnabled: boolean;\n  quotaRemaining: number;\n  dailyLimit: number;\n  hasWarning: boolean;\n  warningMessage?: string;\n}\n\nexport interface QuotaDetail {\n  used: number;\n  limit: number;\n  usagePercentage: number;\n  isNearLimit: boolean;\n}\n\nexport interface QuotaCurrentResponse {\n  channelQuotas: Record<string, QuotaDetail>;\n  totalUsedToday: number;\n  totalDailyLimit: number;\n}\n\nclass ContactsAPI {\n  private getAuthHeaders() {\n    const token = localStorage.getItem('auth-token');\n    return token ? { Authorization: `Bearer ${token}` } : {};\n  }\n\n  async getContactGroups(search?: string, page = 1, pageSize = 50): Promise<ContactGroup[]> {\n    const params = new URLSearchParams();\n    if (search) params.append('search', search);\n    params.append('page', page.toString());\n    params.append('pageSize', pageSize.toString());\n\n    const response = await axios.get(\n      `${API_BASE_URL}/api/contacts/groups?${params}`,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n\n  async getContactSegments(search?: string, page = 1, pageSize = 50): Promise<ContactSegment[]> {\n    const params = new URLSearchParams();\n    if (search) params.append('search', search);\n    params.append('page', page.toString());\n    params.append('pageSize', pageSize.toString());\n\n    const response = await axios.get(\n      `${API_BASE_URL}/api/contacts/segments?${params}`,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n\n  async estimateAudience(request: EstimateAudienceRequest): Promise<EstimateAudienceResponse> {\n    const response = await axios.post(\n      `${API_BASE_URL}/api/contacts/estimate`,\n      request,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n\n  async getSampleContact(request: SampleContactRequest): Promise<SampleContactResponse> {\n    const response = await axios.post(\n      `${API_BASE_URL}/api/contacts/sample`,\n      request,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n\n  async previewTemplate(request: PreviewTemplateRequest): Promise<PreviewTemplateResponse> {\n    const response = await axios.post(\n      `${API_BASE_URL}/api/templates/preview`,\n      request,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n\n  async getChannelStatus(): Promise<ChannelStatusResponse[]> {\n    const response = await axios.get(\n      `${API_BASE_URL}/api/channels/status`,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n\n  async getCurrentQuota(): Promise<QuotaCurrentResponse> {\n    const response = await axios.get(\n      `${API_BASE_URL}/api/quotas/current`,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n\n  // New Contact Management API methods\n  async searchContacts(params: ContactSearchParams): Promise<ContactSearchResponse> {\n    const queryParams = new URLSearchParams();\n    if (params.search) queryParams.append('search', params.search);\n    if (params.isActive !== undefined) queryParams.append('isActive', params.isActive.toString());\n    if (params.tagIds && params.tagIds.length > 0) {\n      params.tagIds.forEach(tagId => queryParams.append('tagIds', tagId));\n    }\n    if (params.page) queryParams.append('page', params.page.toString());\n    if (params.limit) queryParams.append('limit', params.limit.toString());\n    if (params.sortBy) queryParams.append('sortBy', params.sortBy);\n    if (params.sortOrder) queryParams.append('sortOrder', params.sortOrder);\n    if (params.afterUpdatedAt) queryParams.append('afterUpdatedAt', params.afterUpdatedAt);\n    if (params.afterId) queryParams.append('afterId', params.afterId);\n\n    const response = await axios.get(\n      `${API_BASE_URL}/api/contacts?${queryParams}`,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n\n  async getContact(id: string): Promise<Contact> {\n    const response = await axios.get(\n      `${API_BASE_URL}/api/contacts/${id}`,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n\n  async createContact(data: CreateContactRequest): Promise<Contact> {\n    const response = await axios.post(\n      `${API_BASE_URL}/api/contacts`,\n      data,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n\n  async updateContact(id: string, data: UpdateContactRequest): Promise<Contact> {\n    const response = await axios.put(\n      `${API_BASE_URL}/api/contacts/${id}`,\n      data,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n\n  async deleteContact(id: string): Promise<void> {\n    await axios.delete(\n      `${API_BASE_URL}/api/contacts/${id}`,\n      { headers: this.getAuthHeaders() }\n    );\n  }\n\n  async getTags(): Promise<Tag[]> {\n    const response = await axios.get(\n      `${API_BASE_URL}/api/tags`,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n\n  async getContactHistory(id: string, params?: Partial<ContactHistorySearchRequest>): Promise<ContactHistory[]> {\n    const queryParams = new URLSearchParams();\n    if (params?.type) queryParams.append('type', params.type);\n    if (params?.fromDate) queryParams.append('fromDate', params.fromDate);\n    if (params?.toDate) queryParams.append('toDate', params.toDate);\n    if (params?.page) queryParams.append('page', params.page.toString());\n    if (params?.limit) queryParams.append('limit', params.limit.toString());\n\n    const response = await axios.get(\n      `${API_BASE_URL}/api/contacts/${id}/history?${queryParams}`,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n}\n\nexport const contactsAPI = new ContactsAPI();"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1513, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1519, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/lib/hooks/use-contacts.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { contactsAPI, type EstimateAudienceRequest, type SampleContactRequest, type PreviewTemplateRequest } from '@/lib/api/contacts';\nimport { ContactSearchParams, CreateContactRequest, UpdateContactRequest } from '@/lib/types/contact';\n\n// Query keys\nconst QUERY_KEYS = {\n  contactGroups: (search?: string, page?: number) => ['contacts', 'groups', { search, page }] as const,\n  contactSegments: (search?: string, page?: number) => ['contacts', 'segments', { search, page }] as const,\n  estimateAudience: (request: EstimateAudienceRequest) => ['contacts', 'estimate', request] as const,\n  sampleContact: (request: SampleContactRequest) => ['contacts', 'sample', request] as const,\n  previewTemplate: (request: PreviewTemplateRequest) => ['templates', 'preview', request] as const,\n  channelStatus: () => ['channels', 'status'] as const,\n  currentQuota: () => ['quotas', 'current'] as const,\n  contacts: (params: ContactSearchParams) => ['contacts', params] as const,\n  contact: (id: string) => ['contact', id] as const,\n  contactHistory: (id: string) => ['contact-history', id] as const,\n  tags: () => ['tags'] as const,\n};\n\n// Hooks for contact groups\nexport function useContactGroups(search?: string, page = 1, pageSize = 50) {\n  return useQuery({\n    queryKey: QUERY_KEYS.contactGroups(search, page),\n    queryFn: () => contactsAPI.getContactGroups(search, page, pageSize),\n    enabled: true,\n  });\n}\n\n// Hooks for contact segments\nexport function useContactSegments(search?: string, page = 1, pageSize = 50) {\n  return useQuery({\n    queryKey: QUERY_KEYS.contactSegments(search, page),\n    queryFn: () => contactsAPI.getContactSegments(search, page, pageSize),\n    enabled: true,\n  });\n}\n\n// Hook for audience estimation\nexport function useEstimateAudience() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (request: EstimateAudienceRequest) => contactsAPI.estimateAudience(request),\n    onSuccess: (data, variables) => {\n      // Cache the result for this specific request\n      queryClient.setQueryData(\n        QUERY_KEYS.estimateAudience(variables),\n        data\n      );\n    },\n  });\n}\n\n// Hook to get cached audience estimate\nexport function useCachedAudienceEstimate(request: EstimateAudienceRequest | null) {\n  return useQuery({\n    queryKey: request ? QUERY_KEYS.estimateAudience(request) : ['contacts', 'estimate', 'empty'],\n    queryFn: () => contactsAPI.estimateAudience(request!),\n    enabled: false, // Only manually triggered\n    staleTime: 2 * 60 * 1000, // 2 minutes\n  });\n}\n\n// Hook for sample contact retrieval\nexport function useSampleContact(request: SampleContactRequest | null, enabled = true) {\n  return useQuery({\n    queryKey: request ? QUERY_KEYS.sampleContact(request) : ['contacts', 'sample', 'empty'],\n    queryFn: () => contactsAPI.getSampleContact(request!),\n    enabled: enabled && request !== null,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\n// Hook for template preview\nexport function usePreviewTemplate() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (request: PreviewTemplateRequest) => contactsAPI.previewTemplate(request),\n    onSuccess: (data, variables) => {\n      // Cache the result for this specific request\n      queryClient.setQueryData(\n        QUERY_KEYS.previewTemplate(variables),\n        data\n      );\n    },\n  });\n}\n\n// Hook for channel status\nexport function useChannelStatus() {\n  return useQuery({\n    queryKey: QUERY_KEYS.channelStatus(),\n    queryFn: () => contactsAPI.getChannelStatus(),\n    staleTime: 30 * 1000, // 30 seconds\n    refetchInterval: 60 * 1000, // Refetch every minute\n  });\n}\n\n// Hook for current quota\nexport function useCurrentQuota() {\n  return useQuery({\n    queryKey: QUERY_KEYS.currentQuota(),\n    queryFn: () => contactsAPI.getCurrentQuota(),\n    staleTime: 30 * 1000, // 30 seconds\n    refetchInterval: 60 * 1000, // Refetch every minute\n  });\n}\n\n// Contact CRUD Hooks\n\n// Hook for searching contacts\nexport function useContacts(params: ContactSearchParams) {\n  return useQuery({\n    queryKey: QUERY_KEYS.contacts(params),\n    queryFn: () => contactsAPI.searchContacts(params),\n    keepPreviousData: true,\n    staleTime: 30 * 1000, // 30 seconds\n  });\n}\n\n// Hook for getting a single contact\nexport function useContact(id: string) {\n  return useQuery({\n    queryKey: QUERY_KEYS.contact(id),\n    queryFn: () => contactsAPI.getContact(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\n// Hook for getting contact history\nexport function useContactHistory(id: string) {\n  return useQuery({\n    queryKey: QUERY_KEYS.contactHistory(id),\n    queryFn: () => contactsAPI.getContactHistory(id),\n    enabled: !!id,\n    staleTime: 30 * 1000, // 30 seconds\n  });\n}\n\n// Hook for getting tags\nexport function useTags() {\n  return useQuery({\n    queryKey: QUERY_KEYS.tags(),\n    queryFn: () => contactsAPI.getTags(),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\n// Hook for creating a contact\nexport function useCreateContact() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateContactRequest) => contactsAPI.createContact(data),\n    onSuccess: () => {\n      // Invalidate contacts queries to refetch data\n      queryClient.invalidateQueries(['contacts']);\n      queryClient.invalidateQueries(['tags']);\n    },\n  });\n}\n\n// Hook for updating a contact\nexport function useUpdateContact() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: UpdateContactRequest }) => \n      contactsAPI.updateContact(id, data),\n    onSuccess: (data, variables) => {\n      // Update the contact in the cache\n      queryClient.setQueryData(QUERY_KEYS.contact(variables.id), data);\n      // Invalidate related queries\n      queryClient.invalidateQueries(['contacts']);\n      queryClient.invalidateQueries(QUERY_KEYS.contactHistory(variables.id));\n      queryClient.invalidateQueries(['tags']);\n    },\n  });\n}\n\n// Hook for deleting a contact\nexport function useDeleteContact() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => contactsAPI.deleteContact(id),\n    onSuccess: (_, id) => {\n      // Remove contact from cache\n      queryClient.removeQueries(QUERY_KEYS.contact(id));\n      queryClient.removeQueries(QUERY_KEYS.contactHistory(id));\n      // Invalidate contacts list\n      queryClient.invalidateQueries(['contacts']);\n      queryClient.invalidateQueries(['tags']);\n    },\n  });\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1894, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1900, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }"],"names":[],"mappings":";;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,yBAAW,0KAAM,UAAU,MAG/B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,yMAAC,wKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,yMAAC,wKAAkB,SAAS;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,wKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 1940, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1946, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/wizard-feedback.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useCampaignError } from '@/lib/context/campaign-error-context';\nimport { Alert, AlertTitle, AlertDescription } from '@/components/ui/alert';\nimport { Button } from '@/components/ui/button';\nimport { Progress } from '@/components/ui/progress';\nimport { \n  AlertCircle, \n  CheckCircle2, \n  Clock, \n  Loader2, \n  RefreshCw,\n  AlertTriangle,\n  Info,\n  Wifi,\n  WifiOff\n} from 'lucide-react';\n\n// Real-time feedback for wizard steps\ninterface WizardStepFeedbackProps {\n  stepNumber: number;\n  title?: string;\n  isLoading?: boolean;\n  loadingText?: string;\n  progress?: number; // 0-100\n  className?: string;\n}\n\nexport function WizardStepFeedback({ \n  stepNumber, \n  title,\n  isLoading = false,\n  loadingText,\n  progress,\n  className \n}: WizardStepFeedbackProps) {\n  const { stepErrors, isOnline } = useCampaignError();\n  const errors = stepErrors[stepNumber] || [];\n\n  // Don't render if no feedback to show\n  if (!isLoading && errors.length === 0 && !loadingText && progress === undefined) {\n    return null;\n  }\n\n  return (\n    <div className={`space-y-3 ${className}`}>\n      {/* Loading indicator with progress */}\n      {isLoading && (\n        <Alert variant=\"info\">\n          <Loader2 className=\"h-4 w-4 animate-spin\" />\n          <AlertTitle className=\"flex items-center justify-between\">\n            <span>{title || '처리 중...'}</span>\n            {!isOnline && <WifiOff className=\"h-3 w-3 text-gray-400\" />}\n          </AlertTitle>\n          <AlertDescription>\n            <div className=\"space-y-2\">\n              <p>{loadingText || '잠시만 기다려주세요.'}</p>\n              {progress !== undefined && (\n                <div className=\"space-y-1\">\n                  <Progress value={progress} className=\"h-2\" />\n                  <p className=\"text-xs text-gray-500\">{progress}% 완료</p>\n                </div>\n              )}\n            </div>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Error alerts */}\n      {errors.map((error, index) => (\n        <Alert \n          key={index} \n          variant={error.severity === 'warning' ? 'warning' : 'destructive'}\n        >\n          {error.severity === 'warning' ? (\n            <AlertTriangle className=\"h-4 w-4\" />\n          ) : (\n            <AlertCircle className=\"h-4 w-4\" />\n          )}\n          <AlertTitle>{error.title}</AlertTitle>\n          <AlertDescription>\n            <div className=\"space-y-2\">\n              <p>{error.message}</p>\n              {error.actionable && (\n                <p className=\"text-xs opacity-75\">\n                  {error.retryable ? '다시 시도하거나 설정을 확인해주세요.' : '설정을 수정해주세요.'}\n                </p>\n              )}\n            </div>\n          </AlertDescription>\n        </Alert>\n      ))}\n\n      {/* Network status warning */}\n      {!isOnline && (\n        <Alert variant=\"warning\">\n          <WifiOff className=\"h-4 w-4\" />\n          <AlertTitle>오프라인 상태</AlertTitle>\n          <AlertDescription>\n            인터넷 연결이 끊어져 일부 기능이 제한됩니다. 연결이 복구되면 자동으로 재시도됩니다.\n          </AlertDescription>\n        </Alert>\n      )}\n    </div>\n  );\n}\n\n// Success feedback component\ninterface SuccessFeedbackProps {\n  title: string;\n  description: string;\n  action?: {\n    text: string;\n    onClick: () => void;\n  };\n  className?: string;\n}\n\nexport function SuccessFeedback({ \n  title, \n  description, \n  action, \n  className \n}: SuccessFeedbackProps) {\n  return (\n    <Alert variant=\"success\" className={className}>\n      <CheckCircle2 className=\"h-4 w-4\" />\n      <AlertTitle>{title}</AlertTitle>\n      <AlertDescription>\n        <div className=\"space-y-2\">\n          <p>{description}</p>\n          {action && (\n            <Button \n              variant=\"link\" \n              size=\"sm\" \n              onClick={action.onClick}\n              className=\"p-0 h-auto text-green-700\"\n            >\n              {action.text}\n            </Button>\n          )}\n        </div>\n      </AlertDescription>\n    </Alert>\n  );\n}\n\n// Operation status tracker\ninterface OperationStatusProps {\n  operations: Array<{\n    name: string;\n    status: 'pending' | 'in-progress' | 'completed' | 'failed';\n    message?: string;\n    progress?: number;\n  }>;\n  className?: string;\n}\n\nexport function OperationStatus({ operations, className }: OperationStatusProps) {\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return <Clock className=\"h-3 w-3 text-gray-400\" />;\n      case 'in-progress':\n        return <Loader2 className=\"h-3 w-3 animate-spin text-blue-500\" />;\n      case 'completed':\n        return <CheckCircle2 className=\"h-3 w-3 text-green-500\" />;\n      case 'failed':\n        return <AlertCircle className=\"h-3 w-3 text-red-500\" />;\n      default:\n        return null;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return 'text-gray-500';\n      case 'in-progress':\n        return 'text-blue-600';\n      case 'completed':\n        return 'text-green-600';\n      case 'failed':\n        return 'text-red-600';\n      default:\n        return 'text-gray-500';\n    }\n  };\n\n  return (\n    <div className={`space-y-2 ${className}`}>\n      {operations.map((operation, index) => (\n        <div \n          key={index} \n          className=\"flex items-center gap-2 p-2 rounded-md bg-gray-50\"\n        >\n          {getStatusIcon(operation.status)}\n          <div className=\"flex-1 min-w-0\">\n            <p className={`text-sm font-medium ${getStatusColor(operation.status)}`}>\n              {operation.name}\n            </p>\n            {operation.message && (\n              <p className=\"text-xs text-gray-500 truncate\">\n                {operation.message}\n              </p>\n            )}\n            {operation.progress !== undefined && operation.status === 'in-progress' && (\n              <div className=\"mt-1\">\n                <Progress value={operation.progress} className=\"h-1\" />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n// Retry button component\ninterface RetryButtonProps {\n  onRetry: () => void;\n  isRetrying?: boolean;\n  disabled?: boolean;\n  text?: string;\n  className?: string;\n}\n\nexport function RetryButton({ \n  onRetry, \n  isRetrying = false, \n  disabled = false,\n  text = '다시 시도',\n  className \n}: RetryButtonProps) {\n  return (\n    <Button \n      variant=\"outline\" \n      size=\"sm\" \n      onClick={onRetry}\n      disabled={disabled || isRetrying}\n      className={className}\n    >\n      {isRetrying ? (\n        <Loader2 className=\"h-3 w-3 mr-2 animate-spin\" />\n      ) : (\n        <RefreshCw className=\"h-3 w-3 mr-2\" />\n      )}\n      {isRetrying ? '재시도 중...' : text}\n    </Button>\n  );\n}\n\n// Step validation indicator\ninterface StepValidationProps {\n  isValid: boolean;\n  isValidating?: boolean;\n  errors?: string[];\n  warnings?: string[];\n  className?: string;\n}\n\nexport function StepValidation({ \n  isValid, \n  isValidating = false,\n  errors = [],\n  warnings = [],\n  className \n}: StepValidationProps) {\n  if (isValidating) {\n    return (\n      <div className={`flex items-center gap-2 text-sm text-blue-600 ${className}`}>\n        <Loader2 className=\"h-3 w-3 animate-spin\" />\n        <span>검증 중...</span>\n      </div>\n    );\n  }\n\n  if (!isValid && errors.length > 0) {\n    return (\n      <div className={`flex items-start gap-2 text-sm text-red-600 ${className}`}>\n        <AlertCircle className=\"h-3 w-3 mt-0.5 flex-shrink-0\" />\n        <div>\n          <p className=\"font-medium\">오류가 있습니다:</p>\n          <ul className=\"text-xs mt-1 space-y-1\">\n            {errors.map((error, index) => (\n              <li key={index}>• {error}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  if (warnings.length > 0) {\n    return (\n      <div className={`flex items-start gap-2 text-sm text-orange-600 ${className}`}>\n        <AlertTriangle className=\"h-3 w-3 mt-0.5 flex-shrink-0\" />\n        <div>\n          <p className=\"font-medium\">주의사항:</p>\n          <ul className=\"text-xs mt-1 space-y-1\">\n            {warnings.map((warning, index) => (\n              <li key={index}>• {warning}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  if (isValid) {\n    return (\n      <div className={`flex items-center gap-2 text-sm text-green-600 ${className}`}>\n        <CheckCircle2 className=\"h-3 w-3\" />\n        <span>검증 완료</span>\n      </div>\n    );\n  }\n\n  return null;\n}"],"names":[],"mappings":";;;;;;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAPA;;;;;;AA6BO,SAAS,mBAAmB,EACjC,UAAU,EACV,KAAK,EACL,YAAY,KAAK,EACjB,WAAW,EACX,QAAQ,EACR,SAAS,EACe;;IACxB,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,qKAAA,CAAA,mBAAgB,AAAD;IAChD,MAAM,SAAS,UAAU,CAAC,WAAW,IAAI,EAAE;IAE3C,sCAAsC;IACtC,IAAI,CAAC,aAAa,OAAO,MAAM,KAAK,KAAK,CAAC,eAAe,aAAa,WAAW;QAC/E,OAAO;IACT;IAEA,qBACE,yMAAC;QAAI,WAAW,CAAC,UAAU,EAAE,WAAW;;YAErC,2BACC,yMAAC,gJAAA,CAAA,QAAK;gBAAC,SAAQ;;kCACb,yMAAC,gOAAA,CAAA,UAAO;wBAAC,WAAU;;;;;;kCACnB,yMAAC,gJAAA,CAAA,aAAU;wBAAC,WAAU;;0CACpB,yMAAC;0CAAM,SAAS;;;;;;4BACf,CAAC,0BAAY,yMAAC,2NAAA,CAAA,UAAO;gCAAC,WAAU;;;;;;;;;;;;kCAEnC,yMAAC,gJAAA,CAAA,mBAAgB;kCACf,cAAA,yMAAC;4BAAI,WAAU;;8CACb,yMAAC;8CAAG,eAAe;;;;;;gCAClB,aAAa,2BACZ,yMAAC;oCAAI,WAAU;;sDACb,yMAAC,mJAAA,CAAA,WAAQ;4CAAC,OAAO;4CAAU,WAAU;;;;;;sDACrC,yMAAC;4CAAE,WAAU;;gDAAyB;gDAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAS1D,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,yMAAC,gJAAA,CAAA,QAAK;oBAEJ,SAAS,MAAM,QAAQ,KAAK,YAAY,YAAY;;wBAEnD,MAAM,QAAQ,KAAK,0BAClB,yMAAC,uOAAA,CAAA,gBAAa;4BAAC,WAAU;;;;;iDAEzB,yMAAC,mOAAA,CAAA,cAAW;4BAAC,WAAU;;;;;;sCAEzB,yMAAC,gJAAA,CAAA,aAAU;sCAAE,MAAM,KAAK;;;;;;sCACxB,yMAAC,gJAAA,CAAA,mBAAgB;sCACf,cAAA,yMAAC;gCAAI,WAAU;;kDACb,yMAAC;kDAAG,MAAM,OAAO;;;;;;oCAChB,MAAM,UAAU,kBACf,yMAAC;wCAAE,WAAU;kDACV,MAAM,SAAS,GAAG,yBAAyB;;;;;;;;;;;;;;;;;;mBAd/C;;;;;YAuBR,CAAC,0BACA,yMAAC,gJAAA,CAAA,QAAK;gBAAC,SAAQ;;kCACb,yMAAC,2NAAA,CAAA,UAAO;wBAAC,WAAU;;;;;;kCACnB,yMAAC,gJAAA,CAAA,aAAU;kCAAC;;;;;;kCACZ,yMAAC,gJAAA,CAAA,mBAAgB;kCAAC;;;;;;;;;;;;;;;;;;AAO5B;GA7EgB;;QAQmB,qKAAA,CAAA,mBAAgB;;;KARnC;AA0FT,SAAS,gBAAgB,EAC9B,KAAK,EACL,WAAW,EACX,MAAM,EACN,SAAS,EACY;IACrB,qBACE,yMAAC,gJAAA,CAAA,QAAK;QAAC,SAAQ;QAAU,WAAW;;0BAClC,yMAAC,oOAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;0BACxB,yMAAC,gJAAA,CAAA,aAAU;0BAAE;;;;;;0BACb,yMAAC,gJAAA,CAAA,mBAAgB;0BACf,cAAA,yMAAC;oBAAI,WAAU;;sCACb,yMAAC;sCAAG;;;;;;wBACH,wBACC,yMAAC,iJAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,SAAS,OAAO,OAAO;4BACvB,WAAU;sCAET,OAAO,IAAI;;;;;;;;;;;;;;;;;;;;;;;AAO1B;MA3BgB;AAwCT,SAAS,gBAAgB,EAAE,UAAU,EAAE,SAAS,EAAwB;IAC7E,MAAM,gBAAgB,CAAC;QACrB,OAAQ;YACN,KAAK;gBACH,qBAAO,yMAAC,mNAAA,CAAA,QAAK;oBAAC,WAAU;;;;;;YAC1B,KAAK;gBACH,qBAAO,yMAAC,gOAAA,CAAA,UAAO;oBAAC,WAAU;;;;;;YAC5B,KAAK;gBACH,qBAAO,yMAAC,oOAAA,CAAA,eAAY;oBAAC,WAAU;;;;;;YACjC,KAAK;gBACH,qBAAO,yMAAC,mOAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAChC;gBACE,OAAO;QACX;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,qBACE,yMAAC;QAAI,WAAW,CAAC,UAAU,EAAE,WAAW;kBACrC,WAAW,GAAG,CAAC,CAAC,WAAW,sBAC1B,yMAAC;gBAEC,WAAU;;oBAET,cAAc,UAAU,MAAM;kCAC/B,yMAAC;wBAAI,WAAU;;0CACb,yMAAC;gCAAE,WAAW,CAAC,oBAAoB,EAAE,eAAe,UAAU,MAAM,GAAG;0CACpE,UAAU,IAAI;;;;;;4BAEhB,UAAU,OAAO,kBAChB,yMAAC;gCAAE,WAAU;0CACV,UAAU,OAAO;;;;;;4BAGrB,UAAU,QAAQ,KAAK,aAAa,UAAU,MAAM,KAAK,+BACxD,yMAAC;gCAAI,WAAU;0CACb,cAAA,yMAAC,mJAAA,CAAA,WAAQ;oCAAC,OAAO,UAAU,QAAQ;oCAAE,WAAU;;;;;;;;;;;;;;;;;;eAfhD;;;;;;;;;;AAuBf;MA1DgB;AAqET,SAAS,YAAY,EAC1B,OAAO,EACP,aAAa,KAAK,EAClB,WAAW,KAAK,EAChB,OAAO,OAAO,EACd,SAAS,EACQ;IACjB,qBACE,yMAAC,iJAAA,CAAA,SAAM;QACL,SAAQ;QACR,MAAK;QACL,SAAS;QACT,UAAU,YAAY;QACtB,WAAW;;YAEV,2BACC,yMAAC,gOAAA,CAAA,UAAO;gBAAC,WAAU;;;;;qCAEnB,yMAAC,+NAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;YAEtB,aAAa,aAAa;;;;;;;AAGjC;MAvBgB;AAkCT,SAAS,eAAe,EAC7B,OAAO,EACP,eAAe,KAAK,EACpB,SAAS,EAAE,EACX,WAAW,EAAE,EACb,SAAS,EACW;IACpB,IAAI,cAAc;QAChB,qBACE,yMAAC;YAAI,WAAW,CAAC,8CAA8C,EAAE,WAAW;;8BAC1E,yMAAC,gOAAA,CAAA,UAAO;oBAAC,WAAU;;;;;;8BACnB,yMAAC;8BAAK;;;;;;;;;;;;IAGZ;IAEA,IAAI,CAAC,WAAW,OAAO,MAAM,GAAG,GAAG;QACjC,qBACE,yMAAC;YAAI,WAAW,CAAC,4CAA4C,EAAE,WAAW;;8BACxE,yMAAC,mOAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;8BACvB,yMAAC;;sCACC,yMAAC;4BAAE,WAAU;sCAAc;;;;;;sCAC3B,yMAAC;4BAAG,WAAU;sCACX,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,yMAAC;;wCAAe;wCAAG;;mCAAV;;;;;;;;;;;;;;;;;;;;;;IAMrB;IAEA,IAAI,SAAS,MAAM,GAAG,GAAG;QACvB,qBACE,yMAAC;YAAI,WAAW,CAAC,+CAA+C,EAAE,WAAW;;8BAC3E,yMAAC,uOAAA,CAAA,gBAAa;oBAAC,WAAU;;;;;;8BACzB,yMAAC;;sCACC,yMAAC;4BAAE,WAAU;sCAAc;;;;;;sCAC3B,yMAAC;4BAAG,WAAU;sCACX,SAAS,GAAG,CAAC,CAAC,SAAS,sBACtB,yMAAC;;wCAAe;wCAAG;;mCAAV;;;;;;;;;;;;;;;;;;;;;;IAMrB;IAEA,IAAI,SAAS;QACX,qBACE,yMAAC;YAAI,WAAW,CAAC,+CAA+C,EAAE,WAAW;;8BAC3E,yMAAC,oOAAA,CAAA,eAAY;oBAAC,WAAU;;;;;;8BACxB,yMAAC;8BAAK;;;;;;;;;;;;IAGZ;IAEA,OAAO;AACT;MA1DgB"}},
    {"offset": {"line": 2542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2548, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/campaign-wizard/audience-step.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useWizard } from '@/lib/context/campaign-wizard-context';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Separator } from '@/components/ui/separator';\nimport { Users, Filter, Target, Search, Loader2, AlertCircle } from 'lucide-react';\nimport { useContactGroups, useContactSegments, useEstimateAudience } from '@/lib/hooks/use-contacts';\nimport { WizardStepFeedback, StepValidation } from '@/components/ui/wizard-feedback';\nimport { useDebounce } from 'react-use';\n\nexport function AudienceStep() {\n  const { state, dispatch } = useWizard();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState('');\n  \n  // Debounce search term to avoid too many API calls\n  useDebounce(() => {\n    setDebouncedSearchTerm(searchTerm);\n  }, 300, [searchTerm]);\n\n  // Fetch contact groups and segments\n  const { \n    data: contactGroups = [], \n    isLoading: isLoadingGroups, \n    error: groupsError \n  } = useContactGroups(debouncedSearchTerm || undefined);\n  \n  const { \n    data: contactSegments = [], \n    isLoading: isLoadingSegments, \n    error: segmentsError \n  } = useContactSegments(debouncedSearchTerm || undefined);\n\n  // Estimate audience mutation\n  const estimateAudienceMutation = useEstimateAudience();\n\n  const handleGroupToggle = (groupId: string, checked: boolean) => {\n    const currentGroups = state.audience.groupIds;\n    const updatedGroups = checked \n      ? [...currentGroups, groupId]\n      : currentGroups.filter(id => id !== groupId);\n\n    dispatch({\n      type: 'SET_AUDIENCE',\n      payload: { groupIds: updatedGroups }\n    });\n  };\n\n  const handleSegmentToggle = (segmentId: string, checked: boolean) => {\n    const currentSegments = state.audience.segmentIds;\n    const updatedSegments = checked \n      ? [...currentSegments, segmentId]\n      : currentSegments.filter(id => id !== segmentId);\n\n    dispatch({\n      type: 'SET_AUDIENCE',\n      payload: { segmentIds: updatedSegments }\n    });\n  };\n\n  const handleIncludeAllToggle = (checked: boolean) => {\n    dispatch({\n      type: 'SET_AUDIENCE',\n      payload: { \n        includeAll: checked,\n        // Clear other selections if including all\n        ...(checked && {\n          groupIds: [],\n          segmentIds: [],\n          filterJson: {}\n        })\n      }\n    });\n  };\n\n  // Trigger audience estimation when selection changes\n  useEffect(() => {\n    if (!state.audience.includeAll && (state.audience.groupIds.length > 0 || state.audience.segmentIds.length > 0)) {\n      estimateAudienceMutation.mutate({\n        groupIds: state.audience.groupIds,\n        segmentIds: state.audience.segmentIds,\n        filterJson: state.audience.filterJson || {}\n      });\n    }\n  }, [state.audience.groupIds, state.audience.segmentIds, state.audience.includeAll]);\n\n  const getEstimatedCount = () => {\n    if (state.audience.includeAll) {\n      return 50000; // Could be fetched from API or cached\n    }\n\n    if (estimateAudienceMutation.data) {\n      return estimateAudienceMutation.data.uniqueContacts;\n    }\n\n    // Fallback: calculate simple sum from displayed data\n    let total = 0;\n    \n    state.audience.groupIds.forEach(groupId => {\n      const group = contactGroups.find(g => g.id === groupId);\n      if (group) total += group.count;\n    });\n\n    state.audience.segmentIds.forEach(segmentId => {\n      const segment = contactSegments.find(s => s.id === segmentId);\n      if (segment) total += segment.count;\n    });\n\n    return total;\n  };\n\n  // The filtering is now handled by the API with the debounced search term\n  const isLoading = isLoadingGroups || isLoadingSegments;\n  const hasError = groupsError || segmentsError;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div>\n        <h2 className=\"text-2xl font-bold text-gray-900 flex items-center gap-2\">\n          <Target className=\"h-6 w-6 text-blue-500\" />\n          Select Your Audience\n        </h2>\n        <p className=\"text-gray-600 mt-1\">\n          Choose who will receive your campaign message. You can select specific groups, segments, or include all contacts.\n        </p>\n      </div>\n\n      {/* Real-time feedback */}\n      <WizardStepFeedback\n        stepNumber={1}\n        isLoading={isLoading}\n        loadingText={isLoadingGroups ? \"그룹 정보를 불러오는 중...\" : isLoadingSegments ? \"세그먼트 정보를 불러오는 중...\" : undefined}\n      />\n\n      {/* Include All Option */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"flex items-center space-x-3\">\n            <Checkbox\n              id=\"include-all\"\n              checked={state.audience.includeAll}\n              onCheckedChange={handleIncludeAllToggle}\n            />\n            <div className=\"flex-1\">\n              <Label htmlFor=\"include-all\" className=\"text-base font-medium cursor-pointer\">\n                Include All Contacts\n              </Label>\n              <p className=\"text-sm text-gray-500 mt-1\">\n                Send to all contacts in your database (approximately 50,000 contacts)\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Search */}\n      {!state.audience.includeAll && (\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n          <Input\n            placeholder=\"Search groups and segments...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"pl-10\"\n            disabled={isLoading}\n          />\n          {isLoading && (\n            <Loader2 className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 animate-spin\" />\n          )}\n        </div>\n      )}\n\n      {/* Error State */}\n      {hasError && (\n        <Card className=\"border-red-200 bg-red-50\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center gap-2 text-red-600\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <p className=\"text-sm\">Failed to load groups and segments. Please try again.</p>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {!state.audience.includeAll && (\n        <>\n          {/* Groups Section */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Users className=\"h-5 w-5 text-green-500\" />\n                Contact Groups\n                {state.audience.groupIds.length > 0 && (\n                  <Badge variant=\"secondary\">{state.audience.groupIds.length} selected</Badge>\n                )}\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              {isLoadingGroups ? (\n                <div className=\"flex items-center justify-center py-8\">\n                  <Loader2 className=\"h-6 w-6 animate-spin text-gray-400\" />\n                  <span className=\"ml-2 text-gray-500\">Loading groups...</span>\n                </div>\n              ) : contactGroups.length === 0 ? (\n                <p className=\"text-gray-500 text-center py-4\">\n                  {debouncedSearchTerm ? 'No groups found matching your search.' : 'No contact groups available.'}\n                </p>\n              ) : (\n                contactGroups.map((group) => (\n                  <div key={group.id} className=\"flex items-center space-x-3 p-3 rounded-lg border hover:bg-gray-50 transition-colors\">\n                    <Checkbox\n                      id={group.id}\n                      checked={state.audience.groupIds.includes(group.id)}\n                      onCheckedChange={(checked) => handleGroupToggle(group.id, checked as boolean)}\n                    />\n                    <div className=\"flex-1\">\n                      <Label htmlFor={group.id} className=\"font-medium cursor-pointer\">\n                        {group.name}\n                      </Label>\n                      {group.description && <p className=\"text-sm text-gray-500\">{group.description}</p>}\n                    </div>\n                    <Badge variant=\"outline\">{group.count.toLocaleString()} contacts</Badge>\n                  </div>\n                ))\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Segments Section */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Filter className=\"h-5 w-5 text-blue-500\" />\n                Audience Segments\n                {state.audience.segmentIds.length > 0 && (\n                  <Badge variant=\"secondary\">{state.audience.segmentIds.length} selected</Badge>\n                )}\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              {isLoadingSegments ? (\n                <div className=\"flex items-center justify-center py-8\">\n                  <Loader2 className=\"h-6 w-6 animate-spin text-gray-400\" />\n                  <span className=\"ml-2 text-gray-500\">Loading segments...</span>\n                </div>\n              ) : contactSegments.length === 0 ? (\n                <p className=\"text-gray-500 text-center py-4\">\n                  {debouncedSearchTerm ? 'No segments found matching your search.' : 'No contact segments available.'}\n                </p>\n              ) : (\n                contactSegments.map((segment) => (\n                  <div key={segment.id} className=\"flex items-center space-x-3 p-3 rounded-lg border hover:bg-gray-50 transition-colors\">\n                    <Checkbox\n                      id={segment.id}\n                      checked={state.audience.segmentIds.includes(segment.id)}\n                      onCheckedChange={(checked) => handleSegmentToggle(segment.id, checked as boolean)}\n                    />\n                    <div className=\"flex-1\">\n                      <Label htmlFor={segment.id} className=\"font-medium cursor-pointer\">\n                        {segment.name}\n                      </Label>\n                      {segment.description && <p className=\"text-sm text-gray-500\">{segment.description}</p>}\n                    </div>\n                    <Badge variant=\"outline\">{segment.count.toLocaleString()} contacts</Badge>\n                  </div>\n                ))\n              )}\n            </CardContent>\n          </Card>\n        </>\n      )}\n\n      {/* Estimated Recipients Summary */}\n      <Card className=\"bg-blue-50 border-blue-200\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h3 className=\"font-medium text-gray-900\">Estimated Recipients</h3>\n              <p className=\"text-sm text-gray-600\">\n                Based on your current selection\n              </p>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  {getEstimatedCount().toLocaleString()}\n                </div>\n                {estimateAudienceMutation.isPending && (\n                  <Loader2 className=\"h-4 w-4 animate-spin text-blue-500\" />\n                )}\n              </div>\n              <div className=\"text-sm text-gray-500\">contacts</div>\n              {estimateAudienceMutation.data && !state.audience.includeAll && (\n                <div className=\"text-xs text-blue-600 mt-1\">\n                  {estimateAudienceMutation.data.totalContacts !== estimateAudienceMutation.data.uniqueContacts && (\n                    <>Total: {estimateAudienceMutation.data.totalContacts.toLocaleString()} | Unique: {estimateAudienceMutation.data.uniqueContacts.toLocaleString()}</>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Selection Summary */}\n          {!state.audience.includeAll && (state.audience.groupIds.length > 0 || state.audience.segmentIds.length > 0) && (\n            <div className=\"mt-4 pt-4 border-t border-blue-200\">\n              <p className=\"text-sm font-medium text-gray-700 mb-2\">Selected:</p>\n              <div className=\"flex flex-wrap gap-2\">\n                {state.audience.groupIds.map(groupId => {\n                  const group = contactGroups.find(g => g.id === groupId);\n                  return group ? (\n                    <Badge key={groupId} variant=\"secondary\">\n                      {group.name}\n                    </Badge>\n                  ) : (\n                    <Badge key={groupId} variant=\"outline\">\n                      Group ({groupId.slice(-4)})\n                    </Badge>\n                  );\n                })}\n                {state.audience.segmentIds.map(segmentId => {\n                  const segment = contactSegments.find(s => s.id === segmentId);\n                  return segment ? (\n                    <Badge key={segmentId} variant=\"secondary\">\n                      {segment.name}\n                    </Badge>\n                  ) : (\n                    <Badge key={segmentId} variant=\"outline\">\n                      Segment ({segmentId.slice(-4)})\n                    </Badge>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Validation Errors */}\n      {state.errors[1] && (\n        <div className=\"p-4 bg-red-50 border border-red-200 rounded-md\">\n          <div className=\"text-sm text-red-600\">\n            {state.errors[1].map((error, index) => (\n              <p key={index}>{error}</p>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3342, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3348, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<'textarea'>\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nTextarea.displayName = 'Textarea';\n\nexport { Textarea };\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,0KAAM,UAAU,MAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,yMAAC;QACC,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AACA,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 3377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3383, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/lib/utils/template.ts"],"sourcesContent":["// Token detection and replacement utilities for message templates\n\nexport const TOKEN_REGEX = /\\{([a-zA-Z0-9_]+)\\}/g;\n\nexport interface TokenInfo {\n  token: string;\n  name: string;\n  start: number;\n  end: number;\n}\n\nexport interface TemplateVariables {\n  [key: string]: string;\n}\n\n/**\n * Detects all tokens in a template string\n */\nexport function detectTokens(template: string): string[] {\n  const tokens = new Set<string>();\n  const matches = template.matchAll(TOKEN_REGEX);\n  \n  for (const match of matches) {\n    if (match[1]) {\n      tokens.add(match[1].toLowerCase());\n    }\n  }\n  \n  return Array.from(tokens);\n}\n\n/**\n * Renders a template by replacing tokens with variable values\n */\nexport function renderTemplate(\n  template: string, \n  variables: TemplateVariables, \n  missingTokenPlaceholder = '[missing]'\n): string {\n  return template.replace(TOKEN_REGEX, (match, tokenName) => {\n    const key = tokenName.toLowerCase();\n    return variables[key] ?? `${missingTokenPlaceholder}:${tokenName}`;\n  });\n}\n\n/**\n * Gets missing tokens from a template\n */\nexport function getMissingTokens(template: string, variables: TemplateVariables): string[] {\n  const allTokens = detectTokens(template);\n  return allTokens.filter(token => !(token in variables));\n}\n\n/**\n * Inserts a token at a specific cursor position in a textarea\n */\nexport function insertTokenAtCursor(\n  textarea: HTMLTextAreaElement,\n  token: string,\n  cursorPosition?: number\n): { newText: string; newCursorPosition: number } {\n  const text = textarea.value;\n  const position = cursorPosition ?? textarea.selectionStart ?? text.length;\n  \n  const tokenText = `{${token}}`;\n  const newText = text.slice(0, position) + tokenText + text.slice(position);\n  const newCursorPosition = position + tokenText.length;\n  \n  return { newText, newCursorPosition };\n}\n\n/**\n * Common personalization tokens for political campaigns\n */\nexport const COMMON_TOKENS = [\n  { name: 'name', label: '이름', description: '연락처 이름' },\n  { name: 'phone', label: '전화번호', description: '연락처 전화번호' },\n  { name: 'email', label: '이메일', description: '연락처 이메일' },\n  { name: 'district', label: '선거구', description: '유권자 선거구' },\n  { name: 'candidate', label: '후보자명', description: '후보자 이름' },\n  { name: 'party', label: '정당명', description: '후보자 소속 정당' },\n  { name: 'age', label: '나이', description: '유권자 나이' },\n  { name: 'gender', label: '성별', description: '유권자 성별' },\n] as const;\n\n/**\n * Character count limits by channel type\n */\nexport const CHARACTER_LIMITS = {\n  SMS: 90, // Single SMS part in Korean\n  KAKAO: 1000, // KakaoTalk message limit\n  EMAIL: 10000, // Email body limit\n} as const;\n\n/**\n * Gets character limit for a specific channel\n */\nexport function getCharacterLimit(channel?: string): number {\n  if (!channel) return CHARACTER_LIMITS.SMS; // Default to SMS\n  return CHARACTER_LIMITS[channel as keyof typeof CHARACTER_LIMITS] ?? CHARACTER_LIMITS.SMS;\n}\n\n/**\n * Calculates SMS parts based on Korean character encoding\n */\nexport function calculateSMSParts(text: string): number {\n  // Korean characters typically use 2 bytes in SMS encoding\n  // Single SMS: 70 characters (140 bytes) for Korean\n  // Multi-part SMS: 67 characters per part\n  const koreanChars = (text.match(/[\\uAC00-\\uD7AF\\u1100-\\u11FF\\u3130-\\u318F]/g) || []).length;\n  const otherChars = text.length - koreanChars;\n  const totalBytes = (koreanChars * 2) + otherChars;\n  \n  if (totalBytes <= 140) return 1;\n  return Math.ceil(totalBytes / 134); // 134 bytes per multi-part SMS\n}"],"names":[],"mappings":"AAAA,kEAAkE;;;;;;;;;;;;AAE3D,MAAM,cAAc;AAgBpB,SAAS,aAAa,QAAgB;IAC3C,MAAM,SAAS,IAAI;IACnB,MAAM,UAAU,SAAS,QAAQ,CAAC;IAElC,KAAK,MAAM,SAAS,QAAS;QAC3B,IAAI,KAAK,CAAC,EAAE,EAAE;YACZ,OAAO,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW;QACjC;IACF;IAEA,OAAO,MAAM,IAAI,CAAC;AACpB;AAKO,SAAS,eACd,QAAgB,EAChB,SAA4B,EAC5B,0BAA0B,WAAW;IAErC,OAAO,SAAS,OAAO,CAAC,aAAa,CAAC,OAAO;QAC3C,MAAM,MAAM,UAAU,WAAW;QACjC,OAAO,SAAS,CAAC,IAAI,IAAI,GAAG,wBAAwB,CAAC,EAAE,WAAW;IACpE;AACF;AAKO,SAAS,iBAAiB,QAAgB,EAAE,SAA4B;IAC7E,MAAM,YAAY,aAAa;IAC/B,OAAO,UAAU,MAAM,CAAC,CAAA,QAAS,CAAC,CAAC,SAAS,SAAS;AACvD;AAKO,SAAS,oBACd,QAA6B,EAC7B,KAAa,EACb,cAAuB;IAEvB,MAAM,OAAO,SAAS,KAAK;IAC3B,MAAM,WAAW,kBAAkB,SAAS,cAAc,IAAI,KAAK,MAAM;IAEzE,MAAM,YAAY,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IAC9B,MAAM,UAAU,KAAK,KAAK,CAAC,GAAG,YAAY,YAAY,KAAK,KAAK,CAAC;IACjE,MAAM,oBAAoB,WAAW,UAAU,MAAM;IAErD,OAAO;QAAE;QAAS;IAAkB;AACtC;AAKO,MAAM,gBAAgB;IAC3B;QAAE,MAAM;QAAQ,OAAO;QAAM,aAAa;IAAS;IACnD;QAAE,MAAM;QAAS,OAAO;QAAQ,aAAa;IAAW;IACxD;QAAE,MAAM;QAAS,OAAO;QAAO,aAAa;IAAU;IACtD;QAAE,MAAM;QAAY,OAAO;QAAO,aAAa;IAAU;IACzD;QAAE,MAAM;QAAa,OAAO;QAAQ,aAAa;IAAS;IAC1D;QAAE,MAAM;QAAS,OAAO;QAAO,aAAa;IAAY;IACxD;QAAE,MAAM;QAAO,OAAO;QAAM,aAAa;IAAS;IAClD;QAAE,MAAM;QAAU,OAAO;QAAM,aAAa;IAAS;CACtD;AAKM,MAAM,mBAAmB;IAC9B,KAAK;IACL,OAAO;IACP,OAAO;AACT;AAKO,SAAS,kBAAkB,OAAgB;IAChD,IAAI,CAAC,SAAS,OAAO,iBAAiB,GAAG,EAAE,iBAAiB;IAC5D,OAAO,gBAAgB,CAAC,QAAyC,IAAI,iBAAiB,GAAG;AAC3F;AAKO,SAAS,kBAAkB,IAAY;IAC5C,0DAA0D;IAC1D,mDAAmD;IACnD,yCAAyC;IACzC,MAAM,cAAc,CAAC,KAAK,KAAK,CAAC,iDAAiD,EAAE,EAAE,MAAM;IAC3F,MAAM,aAAa,KAAK,MAAM,GAAG;IACjC,MAAM,aAAa,AAAC,cAAc,IAAK;IAEvC,IAAI,cAAc,KAAK,OAAO;IAC9B,OAAO,KAAK,IAAI,CAAC,aAAa,MAAM,+BAA+B;AACrE"}},
    {"offset": {"line": 3491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3497, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/token-inserter.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator,\n} from '@/components/ui/dropdown-menu';\nimport { Plus, Hash } from 'lucide-react';\nimport { COMMON_TOKENS, insertTokenAtCursor } from '@/lib/utils/template';\n\ninterface TokenInserterProps {\n  onInsertToken: (token: string, newText: string, newCursorPosition: number) => void;\n  textareaRef?: React.RefObject<HTMLTextAreaElement>;\n  availableTokens?: string[];\n  className?: string;\n}\n\nexport function TokenInserter({ \n  onInsertToken, \n  textareaRef, \n  availableTokens,\n  className = \"\" \n}: TokenInserterProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleTokenInsert = (tokenName: string) => {\n    if (!textareaRef?.current) return;\n    \n    const result = insertTokenAtCursor(textareaRef.current, tokenName);\n    onInsertToken(tokenName, result.newText, result.newCursorPosition);\n    setIsOpen(false);\n  };\n\n  const commonTokensToShow = COMMON_TOKENS.filter(token => \n    !availableTokens || availableTokens.includes(token.name)\n  );\n\n  return (\n    <DropdownMenu open={isOpen} onOpenChange={setIsOpen}>\n      <DropdownMenuTrigger asChild>\n        <Button \n          variant=\"outline\" \n          size=\"sm\" \n          className={`gap-1 ${className}`}\n        >\n          <Plus className=\"h-3 w-3\" />\n          변수 삽입\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"w-56\" align=\"start\">\n        <div className=\"px-2 py-1\">\n          <p className=\"text-xs font-medium text-gray-500\">개인화 변수</p>\n          <p className=\"text-xs text-gray-400\">클릭하여 메시지에 삽입</p>\n        </div>\n        <DropdownMenuSeparator />\n        \n        {commonTokensToShow.map((token) => (\n          <DropdownMenuItem \n            key={token.name}\n            onClick={() => handleTokenInsert(token.name)}\n            className=\"cursor-pointer\"\n          >\n            <div className=\"flex items-center gap-2 w-full\">\n              <Hash className=\"h-3 w-3 text-blue-500\" />\n              <div className=\"flex-1\">\n                <div className=\"font-medium\">{token.label}</div>\n                <div className=\"text-xs text-gray-500\">{token.description}</div>\n              </div>\n              <Badge variant=\"outline\" className=\"text-xs\">\n                {`{${token.name}}`}\n              </Badge>\n            </div>\n          </DropdownMenuItem>\n        ))}\n        \n        {commonTokensToShow.length === 0 && (\n          <div className=\"px-2 py-4 text-center text-sm text-gray-500\">\n            사용 가능한 변수가 없습니다\n          </div>\n        )}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAQA;AADA;AAAA;;;AAZA;;;;;;;AAsBO,SAAS,cAAc,EAC5B,aAAa,EACb,WAAW,EACX,eAAe,EACf,YAAY,EAAE,EACK;;IACnB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,yKAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,oBAAoB,CAAC;QACzB,IAAI,CAAC,aAAa,SAAS;QAE3B,MAAM,SAAS,CAAA,GAAA,8IAAA,CAAA,sBAAmB,AAAD,EAAE,YAAY,OAAO,EAAE;QACxD,cAAc,WAAW,OAAO,OAAO,EAAE,OAAO,iBAAiB;QACjE,UAAU;IACZ;IAEA,MAAM,qBAAqB,8IAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,CAAA,QAC9C,CAAC,mBAAmB,gBAAgB,QAAQ,CAAC,MAAM,IAAI;IAGzD,qBACE,yMAAC,2JAAA,CAAA,eAAY;QAAC,MAAM;QAAQ,cAAc;;0BACxC,yMAAC,2JAAA,CAAA,sBAAmB;gBAAC,OAAO;0BAC1B,cAAA,yMAAC,iJAAA,CAAA,SAAM;oBACL,SAAQ;oBACR,MAAK;oBACL,WAAW,CAAC,MAAM,EAAE,WAAW;;sCAE/B,yMAAC,iNAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;wBAAY;;;;;;;;;;;;0BAIhC,yMAAC,2JAAA,CAAA,sBAAmB;gBAAC,WAAU;gBAAO,OAAM;;kCAC1C,yMAAC;wBAAI,WAAU;;0CACb,yMAAC;gCAAE,WAAU;0CAAoC;;;;;;0CACjD,yMAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;kCAEvC,yMAAC,2JAAA,CAAA,wBAAqB;;;;;oBAErB,mBAAmB,GAAG,CAAC,CAAC,sBACvB,yMAAC,2JAAA,CAAA,mBAAgB;4BAEf,SAAS,IAAM,kBAAkB,MAAM,IAAI;4BAC3C,WAAU;sCAEV,cAAA,yMAAC;gCAAI,WAAU;;kDACb,yMAAC,iNAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,yMAAC;wCAAI,WAAU;;0DACb,yMAAC;gDAAI,WAAU;0DAAe,MAAM,KAAK;;;;;;0DACzC,yMAAC;gDAAI,WAAU;0DAAyB,MAAM,WAAW;;;;;;;;;;;;kDAE3D,yMAAC,gJAAA,CAAA,QAAK;wCAAC,SAAQ;wCAAU,WAAU;kDAChC,CAAC,CAAC,EAAE,MAAM,IAAI,CAAC,CAAC,CAAC;;;;;;;;;;;;2BAXjB,MAAM,IAAI;;;;;oBAiBlB,mBAAmB,MAAM,KAAK,mBAC7B,yMAAC;wBAAI,WAAU;kCAA8C;;;;;;;;;;;;;;;;;;AAOvE;GAlEgB;KAAA"}},
    {"offset": {"line": 3677, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3683, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/character-counter.tsx"],"sourcesContent":["'use client';\n\nimport { Badge } from '@/components/ui/badge';\nimport { AlertTriangle, CheckCircle } from 'lucide-react';\nimport { getCharacterLimit, calculateSMSParts, CHARACTER_LIMITS } from '@/lib/utils/template';\n\ninterface CharacterCounterProps {\n  text: string;\n  channel?: string;\n  showSMSParts?: boolean;\n  className?: string;\n}\n\nexport function CharacterCounter({ \n  text, \n  channel = 'SMS', \n  showSMSParts = true,\n  className = \"\" \n}: CharacterCounterProps) {\n  const currentCount = text.length;\n  const limit = getCharacterLimit(channel);\n  const percentage = (currentCount / limit) * 100;\n  const smsParts = calculateSMSParts(text);\n  \n  const getCounterColor = () => {\n    if (percentage > 100) return 'text-red-600';\n    if (percentage > 90) return 'text-orange-600';\n    if (percentage > 75) return 'text-yellow-600';\n    return 'text-gray-600';\n  };\n  \n  const getCounterVariant = (): \"default\" | \"secondary\" | \"destructive\" | \"outline\" => {\n    if (percentage > 100) return 'destructive';\n    if (percentage > 90) return 'outline';\n    return 'secondary';\n  };\n\n  return (\n    <div className={`flex items-center gap-2 ${className}`}>\n      {/* Character Count */}\n      <div className=\"flex items-center gap-1\">\n        {percentage > 100 ? (\n          <AlertTriangle className=\"h-3 w-3 text-red-500\" />\n        ) : (\n          <CheckCircle className=\"h-3 w-3 text-green-500\" />\n        )}\n        <span className={`text-xs ${getCounterColor()}`}>\n          {currentCount.toLocaleString()}/{limit.toLocaleString()}자\n        </span>\n      </div>\n\n      {/* Channel Badge */}\n      <Badge variant={getCounterVariant()} className=\"text-xs\">\n        {channel}\n      </Badge>\n\n      {/* SMS Parts (only for SMS channel) */}\n      {channel === 'SMS' && showSMSParts && smsParts > 1 && (\n        <Badge variant=\"outline\" className=\"text-xs\">\n          {smsParts}건으로 분할\n        </Badge>\n      )}\n\n      {/* Over limit warning */}\n      {percentage > 100 && (\n        <span className=\"text-xs text-red-600\">\n          (+{(currentCount - limit).toLocaleString()})\n        </span>\n      )}\n      \n      {/* Progress indicator */}\n      <div className=\"flex-1 min-w-16 max-w-24\">\n        <div className=\"w-full bg-gray-200 rounded-full h-1\">\n          <div \n            className={`h-1 rounded-full transition-all duration-200 ${\n              percentage > 100 ? 'bg-red-500' :\n              percentage > 90 ? 'bg-orange-500' :\n              percentage > 75 ? 'bg-yellow-500' :\n              'bg-green-500'\n            }`}\n            style={{ width: `${Math.min(percentage, 100)}%` }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AAEA;AADA;AAAA;AAHA;;;;;AAaO,SAAS,iBAAiB,EAC/B,IAAI,EACJ,UAAU,KAAK,EACf,eAAe,IAAI,EACnB,YAAY,EAAE,EACQ;IACtB,MAAM,eAAe,KAAK,MAAM;IAChC,MAAM,QAAQ,CAAA,GAAA,8IAAA,CAAA,oBAAiB,AAAD,EAAE;IAChC,MAAM,aAAa,AAAC,eAAe,QAAS;IAC5C,MAAM,WAAW,CAAA,GAAA,8IAAA,CAAA,oBAAiB,AAAD,EAAE;IAEnC,MAAM,kBAAkB;QACtB,IAAI,aAAa,KAAK,OAAO;QAC7B,IAAI,aAAa,IAAI,OAAO;QAC5B,IAAI,aAAa,IAAI,OAAO;QAC5B,OAAO;IACT;IAEA,MAAM,oBAAoB;QACxB,IAAI,aAAa,KAAK,OAAO;QAC7B,IAAI,aAAa,IAAI,OAAO;QAC5B,OAAO;IACT;IAEA,qBACE,yMAAC;QAAI,WAAW,CAAC,wBAAwB,EAAE,WAAW;;0BAEpD,yMAAC;gBAAI,WAAU;;oBACZ,aAAa,oBACZ,yMAAC,uOAAA,CAAA,gBAAa;wBAAC,WAAU;;;;;6CAEzB,yMAAC,0OAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;kCAEzB,yMAAC;wBAAK,WAAW,CAAC,QAAQ,EAAE,mBAAmB;;4BAC5C,aAAa,cAAc;4BAAG;4BAAE,MAAM,cAAc;4BAAG;;;;;;;;;;;;;0BAK5D,yMAAC,gJAAA,CAAA,QAAK;gBAAC,SAAS;gBAAqB,WAAU;0BAC5C;;;;;;YAIF,YAAY,SAAS,gBAAgB,WAAW,mBAC/C,yMAAC,gJAAA,CAAA,QAAK;gBAAC,SAAQ;gBAAU,WAAU;;oBAChC;oBAAS;;;;;;;YAKb,aAAa,qBACZ,yMAAC;gBAAK,WAAU;;oBAAuB;oBAClC,CAAC,eAAe,KAAK,EAAE,cAAc;oBAAG;;;;;;;0BAK/C,yMAAC;gBAAI,WAAU;0BACb,cAAA,yMAAC;oBAAI,WAAU;8BACb,cAAA,yMAAC;wBACC,WAAW,CAAC,6CAA6C,EACvD,aAAa,MAAM,eACnB,aAAa,KAAK,kBAClB,aAAa,KAAK,kBAClB,gBACA;wBACF,OAAO;4BAAE,OAAO,GAAG,KAAK,GAAG,CAAC,YAAY,KAAK,CAAC,CAAC;wBAAC;;;;;;;;;;;;;;;;;;;;;;AAM5D;KAzEgB"}},
    {"offset": {"line": 3820, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3826, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/message-preview.tsx"],"sourcesContent":["'use client';\n\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Eye, Smartphone, MessageSquare, Mail, AlertCircle, CheckCircle, Loader2 } from 'lucide-react';\nimport { renderTemplate, getMissingTokens, type TemplateVariables } from '@/lib/utils/template';\n\ninterface MessagePreviewProps {\n  title?: string;\n  messageBody: string;\n  variables: TemplateVariables;\n  channel?: string;\n  isLoading?: boolean;\n  className?: string;\n}\n\nexport function MessagePreview({ \n  title, \n  messageBody, \n  variables, \n  channel = 'SMS',\n  isLoading = false,\n  className = \"\" \n}: MessagePreviewProps) {\n  const renderedTitle = title ? renderTemplate(title, variables, '[누락]') : undefined;\n  const renderedBody = renderTemplate(messageBody, variables, '[누락]');\n  const missingTokens = getMissingTokens(messageBody + (title || ''), variables);\n  \n  const getChannelIcon = () => {\n    switch (channel) {\n      case 'SMS':\n        return <Smartphone className=\"h-4 w-4 text-green-600\" />;\n      case 'KAKAO':\n        return <MessageSquare className=\"h-4 w-4 text-yellow-600\" />;\n      case 'EMAIL':\n        return <Mail className=\"h-4 w-4 text-blue-600\" />;\n      default:\n        return <MessageSquare className=\"h-4 w-4 text-gray-600\" />;\n    }\n  };\n\n  const getChannelName = () => {\n    switch (channel) {\n      case 'SMS':\n        return 'SMS 미리보기';\n      case 'KAKAO':\n        return '카카오톡 미리보기';\n      case 'EMAIL':\n        return '이메일 미리보기';\n      default:\n        return '메시지 미리보기';\n    }\n  };\n\n  return (\n    <Card className={`${className}`}>\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"flex items-center gap-2 text-sm\">\n          <Eye className=\"h-4 w-4 text-blue-500\" />\n          {getChannelName()}\n          {getChannelIcon()}\n          {isLoading && <Loader2 className=\"h-3 w-3 animate-spin text-gray-400\" />}\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Missing tokens warning */}\n        {missingTokens.length > 0 && (\n          <div className=\"flex items-start gap-2 p-3 bg-orange-50 border border-orange-200 rounded-md\">\n            <AlertCircle className=\"h-4 w-4 text-orange-600 mt-0.5 flex-shrink-0\" />\n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-sm font-medium text-orange-800\">누락된 변수</p>\n              <p className=\"text-xs text-orange-700 mt-1\">\n                다음 변수들이 연락처 데이터에 없어 [누락]으로 표시됩니다:\n              </p>\n              <div className=\"flex flex-wrap gap-1 mt-2\">\n                {missingTokens.map(token => (\n                  <Badge key={token} variant=\"outline\" className=\"text-xs\">\n                    {`{${token}}`}\n                  </Badge>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Preview content */}\n        <div className=\"space-y-3\">\n          {/* Title preview (for channels that support it) */}\n          {renderedTitle && (\n            <div className=\"space-y-1\">\n              <p className=\"text-xs font-medium text-gray-500\">제목</p>\n              <div className=\"p-2 bg-gray-50 border rounded text-sm font-medium\">\n                {renderedTitle}\n              </div>\n            </div>\n          )}\n\n          {/* Body preview */}\n          <div className=\"space-y-1\">\n            <p className=\"text-xs font-medium text-gray-500\">메시지 내용</p>\n            <div className={`p-3 border rounded-md text-sm whitespace-pre-wrap ${\n              channel === 'SMS' ? 'bg-green-50 border-green-200' :\n              channel === 'KAKAO' ? 'bg-yellow-50 border-yellow-200' :\n              channel === 'EMAIL' ? 'bg-blue-50 border-blue-200' :\n              'bg-gray-50 border-gray-200'\n            }`}>\n              {renderedBody || (\n                <span className=\"text-gray-400 italic\">메시지를 입력하세요...</span>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Preview status */}\n        {!isLoading && (\n          <div className=\"flex items-center gap-1 pt-2\">\n            <CheckCircle className=\"h-3 w-3 text-green-600\" />\n            <span className=\"text-xs text-green-700\">미리보기 준비 완료</span>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;;;;;;AAgBO,SAAS,eAAe,EAC7B,KAAK,EACL,WAAW,EACX,SAAS,EACT,UAAU,KAAK,EACf,YAAY,KAAK,EACjB,YAAY,EAAE,EACM;IACpB,MAAM,gBAAgB,QAAQ,CAAA,GAAA,8IAAA,CAAA,iBAAc,AAAD,EAAE,OAAO,WAAW,UAAU;IACzE,MAAM,eAAe,CAAA,GAAA,8IAAA,CAAA,iBAAc,AAAD,EAAE,aAAa,WAAW;IAC5D,MAAM,gBAAgB,CAAA,GAAA,8IAAA,CAAA,mBAAgB,AAAD,EAAE,cAAc,CAAC,SAAS,EAAE,GAAG;IAEpE,MAAM,iBAAiB;QACrB,OAAQ;YACN,KAAK;gBACH,qBAAO,yMAAC,6NAAA,CAAA,aAAU;oBAAC,WAAU;;;;;;YAC/B,KAAK;gBACH,qBAAO,yMAAC,uOAAA,CAAA,gBAAa;oBAAC,WAAU;;;;;;YAClC,KAAK;gBACH,qBAAO,yMAAC,iNAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;YACzB;gBACE,qBAAO,yMAAC,uOAAA,CAAA,gBAAa;oBAAC,WAAU;;;;;;QACpC;IACF;IAEA,MAAM,iBAAiB;QACrB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,qBACE,yMAAC,+IAAA,CAAA,OAAI;QAAC,WAAW,GAAG,WAAW;;0BAC7B,yMAAC,+IAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,yMAAC,+IAAA,CAAA,YAAS;oBAAC,WAAU;;sCACnB,yMAAC,+MAAA,CAAA,MAAG;4BAAC,WAAU;;;;;;wBACd;wBACA;wBACA,2BAAa,yMAAC,gOAAA,CAAA,UAAO;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAGrC,yMAAC,+IAAA,CAAA,cAAW;gBAAC,WAAU;;oBAEpB,cAAc,MAAM,GAAG,mBACtB,yMAAC;wBAAI,WAAU;;0CACb,yMAAC,mOAAA,CAAA,cAAW;gCAAC,WAAU;;;;;;0CACvB,yMAAC;gCAAI,WAAU;;kDACb,yMAAC;wCAAE,WAAU;kDAAsC;;;;;;kDACnD,yMAAC;wCAAE,WAAU;kDAA+B;;;;;;kDAG5C,yMAAC;wCAAI,WAAU;kDACZ,cAAc,GAAG,CAAC,CAAA,sBACjB,yMAAC,gJAAA,CAAA,QAAK;gDAAa,SAAQ;gDAAU,WAAU;0DAC5C,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;+CADH;;;;;;;;;;;;;;;;;;;;;;kCAUtB,yMAAC;wBAAI,WAAU;;4BAEZ,+BACC,yMAAC;gCAAI,WAAU;;kDACb,yMAAC;wCAAE,WAAU;kDAAoC;;;;;;kDACjD,yMAAC;wCAAI,WAAU;kDACZ;;;;;;;;;;;;0CAMP,yMAAC;gCAAI,WAAU;;kDACb,yMAAC;wCAAE,WAAU;kDAAoC;;;;;;kDACjD,yMAAC;wCAAI,WAAW,CAAC,kDAAkD,EACjE,YAAY,QAAQ,iCACpB,YAAY,UAAU,mCACtB,YAAY,UAAU,+BACtB,8BACA;kDACC,8BACC,yMAAC;4CAAK,WAAU;sDAAuB;;;;;;;;;;;;;;;;;;;;;;;oBAO9C,CAAC,2BACA,yMAAC;wBAAI,WAAU;;0CACb,yMAAC,0OAAA,CAAA,cAAW;gCAAC,WAAU;;;;;;0CACvB,yMAAC;gCAAK,WAAU;0CAAyB;;;;;;;;;;;;;;;;;;;;;;;;AAMrD;KA3GgB"}},
    {"offset": {"line": 4102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4108, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/campaign-wizard/message-step.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useWizard } from '@/lib/context/campaign-wizard-context';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { TokenInserter } from '@/components/ui/token-inserter';\nimport { CharacterCounter } from '@/components/ui/character-counter';\nimport { MessagePreview } from '@/components/ui/message-preview';\nimport { MessageSquare, Hash, Eye, Plus, X, Loader2, AlertCircle } from 'lucide-react';\nimport { useSampleContact, usePreviewTemplate } from '@/lib/hooks/use-contacts';\nimport { WizardStepFeedback } from '@/components/ui/wizard-feedback';\nimport { detectTokens, renderTemplate, COMMON_TOKENS } from '@/lib/utils/template';\n\nexport function MessageStep() {\n  const { state, dispatch } = useWizard();\n  const [activeChannel, setActiveChannel] = useState<string>('SMS');\n  const messageBodyRef = useRef<HTMLTextAreaElement>(null);\n  const messageTitleRef = useRef<HTMLInputElement>(null);\n\n  // Get sample contact based on selected audience\n  const sampleContactRequest = state.audience.includeAll \n    ? null \n    : {\n        groupIds: state.audience.groupIds,\n        segmentIds: state.audience.segmentIds,\n        filterJson: state.audience.filterJson\n      };\n\n  const { \n    data: sampleContact, \n    isLoading: isLoadingSample \n  } = useSampleContact(sampleContactRequest, true);\n\n  // Template preview mutation\n  const previewMutation = usePreviewTemplate();\n\n  // Detected tokens from the current message\n  const detectedTokens = detectTokens(state.message.messageBody + (state.message.messageTitle || ''));\n\n  // Variables from sample contact data\n  const availableVariables = sampleContact?.personalizationData || {};\n\n  // Update preview when message or sample contact changes\n  useEffect(() => {\n    if (state.message.messageBody || state.message.messageTitle) {\n      previewMutation.mutate({\n        messageBody: state.message.messageBody,\n        title: state.message.messageTitle,\n        variables: availableVariables\n      });\n    }\n  }, [state.message.messageBody, state.message.messageTitle, availableVariables]);\n\n  const handleMessageChange = (field: keyof typeof state.message, value: string) => {\n    dispatch({\n      type: 'SET_MESSAGE',\n      payload: { [field]: value }\n    });\n\n    // Auto-detect and update variables\n    if (field === 'messageBody' || field === 'messageTitle') {\n      const allContent = field === 'messageBody' \n        ? value + (state.message.messageTitle || '')\n        : state.message.messageBody + value;\n      \n      const tokens = detectTokens(allContent);\n      const variables: Record<string, string> = {};\n      \n      tokens.forEach(token => {\n        variables[token] = availableVariables[token] || '';\n      });\n\n      dispatch({\n        type: 'SET_MESSAGE',\n        payload: { variables }\n      });\n    }\n  };\n\n  const handleTokenInsert = (token: string, newText: string, newCursorPosition: number) => {\n    const isTitle = messageTitleRef.current === document.activeElement;\n    const field = isTitle ? 'messageTitle' : 'messageBody';\n    \n    handleMessageChange(field, newText);\n    \n    // Set cursor position after state update\n    setTimeout(() => {\n      const targetRef = isTitle ? messageTitleRef : messageBodyRef;\n      if (targetRef.current) {\n        targetRef.current.focus();\n        targetRef.current.setSelectionRange(newCursorPosition, newCursorPosition);\n      }\n    }, 0);\n  };\n\n  const getActiveChannelInfo = () => {\n    const channel = state.channels.channels.find(c => c.channel === activeChannel);\n    return channel || { channel: 'SMS', isEnabled: true };\n  };\n\n  const channelInfo = getActiveChannelInfo();\n  const previewData = previewMutation.data;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div>\n        <h2 className=\"text-2xl font-bold text-gray-900 flex items-center gap-2\">\n          <MessageSquare className=\"h-6 w-6 text-blue-500\" />\n          메시지 작성\n        </h2>\n        <p className=\"text-gray-600 mt-1\">\n          개인화 변수를 활용하여 효과적인 캠페인 메시지를 작성하세요.\n        </p>\n      </div>\n\n      {/* Real-time feedback */}\n      <WizardStepFeedback\n        stepNumber={2}\n        isLoading={isLoadingSample || previewMutation.isPending}\n        loadingText={isLoadingSample ? \"샘플 연락처를 불러오는 중...\" : previewMutation.isPending ? \"메시지 미리보기를 생성하는 중...\" : undefined}\n      />\n\n      {/* Sample Contact Info */}\n      {isLoadingSample ? (\n        <Card className=\"border-blue-200 bg-blue-50\">\n          <CardContent className=\"pt-6 flex items-center gap-2\">\n            <Loader2 className=\"h-4 w-4 animate-spin text-blue-500\" />\n            <span className=\"text-sm text-blue-700\">샘플 연락처 로딩 중...</span>\n          </CardContent>\n        </Card>\n      ) : sampleContact && (\n        <Card className=\"border-blue-200 bg-blue-50\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-start justify-between\">\n              <div>\n                <h4 className=\"font-medium text-blue-900\">미리보기용 샘플 연락처</h4>\n                <p className=\"text-sm text-blue-700 mt-1\">\n                  {sampleContact.name} ({sampleContact.phone || sampleContact.email || 'ID 없음'})\n                </p>\n              </div>\n              <Badge variant=\"secondary\" className=\"text-xs\">\n                선택된 대상에서 추출\n              </Badge>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Message Composition */}\n        <div className=\"space-y-6\">\n          {/* Campaign Name */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-sm\">캠페인 이름</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"campaign-name\">캠페인 이름 (내부 관리용)</Label>\n                <Input\n                  id=\"campaign-name\"\n                  placeholder=\"예: 선거 D-30 안내 메시지\"\n                  value={state.message.name}\n                  onChange={(e) => handleMessageChange('name', e.target.value)}\n                />\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Message Title (for channels that support it) */}\n          {(activeChannel === 'EMAIL' || activeChannel === 'KAKAO') && (\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-between text-sm\">\n                  <span>메시지 제목</span>\n                  <TokenInserter \n                    onInsertToken={handleTokenInsert}\n                    textareaRef={messageTitleRef as any}\n                    availableTokens={Object.keys(availableVariables)}\n                  />\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"message-title\">제목</Label>\n                  <Input\n                    id=\"message-title\"\n                    ref={messageTitleRef}\n                    placeholder=\"메시지 제목을 입력하세요\"\n                    value={state.message.messageTitle || ''}\n                    onChange={(e) => handleMessageChange('messageTitle', e.target.value)}\n                  />\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Message Body */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center justify-between text-sm\">\n                <span>메시지 내용</span>\n                <div className=\"flex items-center gap-2\">\n                  <TokenInserter \n                    onInsertToken={handleTokenInsert}\n                    textareaRef={messageBodyRef}\n                    availableTokens={Object.keys(availableVariables)}\n                  />\n                  <CharacterCounter \n                    text={state.message.messageBody}\n                    channel={activeChannel}\n                  />\n                </div>\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"message-body\">메시지 내용</Label>\n                <Textarea\n                  id=\"message-body\"\n                  ref={messageBodyRef}\n                  placeholder=\"안녕하세요 {name}님, {candidate} 후보입니다...\"\n                  value={state.message.messageBody}\n                  onChange={(e) => handleMessageChange('messageBody', e.target.value)}\n                  rows={8}\n                  className=\"resize-none\"\n                />\n              </div>\n              \n              {/* Token Legend */}\n              {detectedTokens.length > 0 && (\n                <div className=\"space-y-2\">\n                  <p className=\"text-xs font-medium text-gray-700\">사용된 개인화 변수:</p>\n                  <div className=\"flex flex-wrap gap-1\">\n                    {detectedTokens.map(token => {\n                      const hasValue = token in availableVariables;\n                      return (\n                        <Badge \n                          key={token} \n                          variant={hasValue ? \"default\" : \"destructive\"}\n                          className=\"text-xs\"\n                        >\n                          {`{${token}}`}\n                          {!hasValue && <X className=\"ml-1 h-2 w-2\" />}\n                        </Badge>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Available Variables */}\n          {Object.keys(availableVariables).length > 0 && (\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2 text-sm\">\n                  <Hash className=\"h-4 w-4 text-green-500\" />\n                  사용 가능한 개인화 변수\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                  {Object.entries(availableVariables).map(([key, value]) => (\n                    <div key={key} className=\"flex justify-between p-2 bg-gray-50 rounded\">\n                      <span className=\"font-mono text-blue-600\">{`{${key}}`}</span>\n                      <span className=\"text-gray-600 truncate ml-2\">{value}</span>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n\n        {/* Preview Panel */}\n        <div className=\"space-y-4\">\n          {/* Channel Selector */}\n          {state.channels.channels.length > 0 && (\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-sm\">미리보기 채널</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex gap-2\">\n                  {state.channels.channels.map(channel => (\n                    <Button\n                      key={channel.channel}\n                      variant={activeChannel === channel.channel ? \"default\" : \"outline\"}\n                      size=\"sm\"\n                      onClick={() => setActiveChannel(channel.channel)}\n                    >\n                      {channel.channel}\n                    </Button>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Message Preview */}\n          <MessagePreview\n            title={state.message.messageTitle}\n            messageBody={state.message.messageBody}\n            variables={availableVariables}\n            channel={activeChannel}\n            isLoading={previewMutation.isPending}\n          />\n\n          {/* Preview Stats */}\n          {previewData && (\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-sm\">미리보기 통계</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                <div className=\"flex justify-between text-sm\">\n                  <span>렌더링된 글자 수</span>\n                  <span className=\"font-mono\">{previewData.characterCount}</span>\n                </div>\n                {previewData.missingVariables.length > 0 && (\n                  <div className=\"flex items-start gap-2\">\n                    <AlertCircle className=\"h-4 w-4 text-orange-500 mt-0.5 flex-shrink-0\" />\n                    <div>\n                      <p className=\"text-sm font-medium text-orange-700\">누락된 변수</p>\n                      <p className=\"text-xs text-orange-600\">\n                        {previewData.missingVariables.join(', ')}\n                      </p>\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          )}\n        </div>\n      </div>\n\n      {/* Validation Errors */}\n      {state.errors[2] && (\n        <div className=\"p-4 bg-red-50 border border-red-200 rounded-md\">\n          <div className=\"text-sm text-red-600\">\n            {state.errors[2].map((error, index) => (\n              <p key={index}>{error}</p>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4920, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4926, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }"],"names":[],"mappings":";;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,uBAAS,0KAAM,UAAU,MAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC,sKAAiB,IAAI;QACpB,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,yMAAC,sKAAiB,KAAK;YACrB,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,sKAAiB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 4963, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4969, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/channel-priority-list.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/components/ui/label';\nimport { \n  ArrowUp, \n  ArrowDown, \n  MessageSquare, \n  Smartphone, \n  Mail, \n  AlertTriangle,\n  CheckCircle,\n  Clock\n} from 'lucide-react';\nimport type { ChannelStatusResponse } from '@/lib/api/contacts';\n\ninterface ChannelPriorityListProps {\n  channels: ChannelStatusResponse[];\n  selectedChannels: string[];\n  onChannelsReorder: (newOrder: string[]) => void;\n  fallbackEnabled: boolean;\n  onFallbackToggle: (enabled: boolean) => void;\n  className?: string;\n}\n\nexport function ChannelPriorityList({\n  channels,\n  selectedChannels,\n  onChannelsReorder,\n  fallbackEnabled,\n  onFallbackToggle,\n  className = \"\"\n}: ChannelPriorityListProps) {\n  \n  const getChannelIcon = (channel: string) => {\n    switch (channel) {\n      case 'SMS':\n        return <Smartphone className=\"h-4 w-4 text-green-600\" />;\n      case 'KAKAO':\n        return <MessageSquare className=\"h-4 w-4 text-yellow-600\" />;\n      case 'EMAIL':\n        return <Mail className=\"h-4 w-4 text-blue-600\" />;\n      default:\n        return <MessageSquare className=\"h-4 w-4 text-gray-600\" />;\n    }\n  };\n\n  const getChannelName = (channel: string) => {\n    switch (channel) {\n      case 'SMS':\n        return 'SMS';\n      case 'KAKAO':\n        return '카카오톡';\n      case 'EMAIL':\n        return '이메일';\n      default:\n        return channel;\n    }\n  };\n\n  const getChannelStatus = (channel: ChannelStatusResponse) => {\n    if (!channel.isEnabled) {\n      return {\n        icon: <AlertTriangle className=\"h-3 w-3 text-red-500\" />,\n        text: '비활성화',\n        variant: 'destructive' as const\n      };\n    }\n    \n    if (channel.hasWarning) {\n      return {\n        icon: <Clock className=\"h-3 w-3 text-orange-500\" />,\n        text: '주의',\n        variant: 'outline' as const\n      };\n    }\n\n    return {\n      icon: <CheckCircle className=\"h-3 w-3 text-green-500\" />,\n      text: '정상',\n      variant: 'secondary' as const\n    };\n  };\n\n  const moveChannelUp = (index: number) => {\n    if (index > 0) {\n      const newOrder = [...selectedChannels];\n      [newOrder[index - 1], newOrder[index]] = [newOrder[index], newOrder[index - 1]];\n      onChannelsReorder(newOrder);\n    }\n  };\n\n  const moveChannelDown = (index: number) => {\n    if (index < selectedChannels.length - 1) {\n      const newOrder = [...selectedChannels];\n      [newOrder[index], newOrder[index + 1]] = [newOrder[index + 1], newOrder[index]];\n      onChannelsReorder(newOrder);\n    }\n  };\n\n  const removeChannel = (channelToRemove: string) => {\n    const newOrder = selectedChannels.filter(channel => channel !== channelToRemove);\n    onChannelsReorder(newOrder);\n  };\n\n  const addChannel = (channelToAdd: string) => {\n    if (!selectedChannels.includes(channelToAdd)) {\n      onChannelsReorder([...selectedChannels, channelToAdd]);\n    }\n  };\n\n  const availableChannels = channels.filter(channel => \n    !selectedChannels.includes(channel.channel) && channel.isEnabled\n  );\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center justify-between text-sm\">\n          <span>채널 우선순위 설정</span>\n          <div className=\"flex items-center gap-2\">\n            <Label htmlFor=\"fallback-toggle\" className=\"text-xs\">\n              폴백 사용\n            </Label>\n            <Switch\n              id=\"fallback-toggle\"\n              checked={fallbackEnabled}\n              onCheckedChange={onFallbackToggle}\n            />\n          </div>\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Selected Channels */}\n        <div className=\"space-y-2\">\n          <Label className=\"text-sm font-medium\">선택된 채널 ({selectedChannels.length})</Label>\n          {selectedChannels.length === 0 ? (\n            <div className=\"p-4 text-center text-sm text-gray-500 border-2 border-dashed border-gray-200 rounded-lg\">\n              채널을 선택해주세요\n            </div>\n          ) : (\n            <div className=\"space-y-2\">\n              {selectedChannels.map((channelName, index) => {\n                const channel = channels.find(c => c.channel === channelName);\n                if (!channel) return null;\n\n                const status = getChannelStatus(channel);\n                const isPrimary = index === 0;\n                \n                return (\n                  <div\n                    key={channelName}\n                    className={`flex items-center gap-3 p-3 border rounded-lg ${\n                      isPrimary ? 'border-blue-200 bg-blue-50' : 'border-gray-200 bg-white'\n                    }`}\n                  >\n                    {/* Priority Badge */}\n                    <Badge variant={isPrimary ? \"default\" : \"secondary\"} className=\"text-xs\">\n                      {isPrimary ? '주 채널' : `${index + 1}순위`}\n                    </Badge>\n                    \n                    {/* Channel Info */}\n                    <div className=\"flex items-center gap-2 flex-1\">\n                      {getChannelIcon(channelName)}\n                      <span className=\"font-medium\">{getChannelName(channelName)}</span>\n                      \n                      {/* Status Badge */}\n                      <div className=\"flex items-center gap-1\">\n                        {status.icon}\n                        <Badge variant={status.variant} className=\"text-xs\">\n                          {status.text}\n                        </Badge>\n                      </div>\n                      \n                      {/* Quota Info */}\n                      <div className=\"text-xs text-gray-500\">\n                        {channel.quotaRemaining.toLocaleString()}/{channel.dailyLimit.toLocaleString()} 남음\n                      </div>\n                    </div>\n                    \n                    {/* Move Controls */}\n                    <div className=\"flex gap-1\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => moveChannelUp(index)}\n                        disabled={index === 0}\n                      >\n                        <ArrowUp className=\"h-3 w-3\" />\n                      </Button>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => moveChannelDown(index)}\n                        disabled={index === selectedChannels.length - 1}\n                      >\n                        <ArrowDown className=\"h-3 w-3\" />\n                      </Button>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => removeChannel(channelName)}\n                        className=\"text-red-600\"\n                      >\n                        ×\n                      </Button>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n\n        {/* Available Channels */}\n        {availableChannels.length > 0 && (\n          <div className=\"space-y-2\">\n            <Label className=\"text-sm font-medium\">사용 가능한 채널</Label>\n            <div className=\"space-y-2\">\n              {availableChannels.map((channel) => {\n                const status = getChannelStatus(channel);\n                \n                return (\n                  <div\n                    key={channel.channel}\n                    className=\"flex items-center gap-3 p-3 border border-gray-200 rounded-lg bg-gray-50\"\n                  >\n                    <div className=\"flex items-center gap-2 flex-1\">\n                      {getChannelIcon(channel.channel)}\n                      <span className=\"font-medium\">{getChannelName(channel.channel)}</span>\n                      \n                      {/* Status Badge */}\n                      <div className=\"flex items-center gap-1\">\n                        {status.icon}\n                        <Badge variant={status.variant} className=\"text-xs\">\n                          {status.text}\n                        </Badge>\n                      </div>\n                      \n                      {/* Quota Info */}\n                      <div className=\"text-xs text-gray-500\">\n                        {channel.quotaRemaining.toLocaleString()}/{channel.dailyLimit.toLocaleString()} 남음\n                      </div>\n                    </div>\n                    \n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => addChannel(channel.channel)}\n                    >\n                      추가\n                    </Button>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n\n        {/* Fallback Information */}\n        {fallbackEnabled && selectedChannels.length > 1 && (\n          <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n            <div className=\"flex items-start gap-2\">\n              <CheckCircle className=\"h-4 w-4 text-blue-600 mt-0.5 flex-shrink-0\" />\n              <div className=\"text-sm text-blue-800\">\n                <p className=\"font-medium\">폴백 활성화</p>\n                <p>주 채널 실패 시 다음 순위 채널로 자동 전환됩니다.</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5499, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5505, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/campaign-wizard/channel-step.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useWizard } from '@/lib/context/campaign-wizard-context';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ChannelPriorityList } from '@/components/ui/channel-priority-list';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Settings, \n  AlertTriangle, \n  CheckCircle,\n  Loader2\n} from 'lucide-react';\nimport { useChannelStatus, useCurrentQuota } from '@/lib/hooks/use-contacts';\nimport { WizardStepFeedback } from '@/components/ui/wizard-feedback';\n\nexport function ChannelStep() {\n  const { state, dispatch } = useWizard();\n  \n  // Fetch channel status and quota data\n  const { \n    data: channelStatuses = [], \n    isLoading: isLoadingChannels,\n    error: channelError \n  } = useChannelStatus();\n  \n  const { \n    data: quotaData,\n    isLoading: isLoadingQuota,\n    error: quotaError \n  } = useCurrentQuota();\n\n  const handleChannelsReorder = (newOrder: string[]) => {\n    dispatch({\n      type: 'SET_CHANNELS',\n      payload: {\n        channelOrder: newOrder\n      }\n    });\n  };\n\n  const handleFallbackToggle = (enabled: boolean) => {\n    dispatch({\n      type: 'SET_CHANNELS',\n      payload: {\n        fallbackEnabled: enabled\n      }\n    });\n  };\n\n  const getValidationStatus = () => {\n    if (state.channels.channelOrder.length === 0) {\n      return {\n        isValid: false,\n        message: '최소 하나의 채널을 선택해야 합니다.',\n        type: 'error' as const\n      };\n    }\n\n    const primaryChannel = state.channels.channelOrder[0];\n    const primaryChannelStatus = channelStatuses.find(c => c.channel === primaryChannel);\n    \n    if (primaryChannelStatus && !primaryChannelStatus.isEnabled) {\n      return {\n        isValid: false,\n        message: '주 채널이 비활성화되어 있습니다. 다른 채널을 선택하거나 폴백을 활성화하세요.',\n        type: 'error' as const\n      };\n    }\n\n    if (primaryChannelStatus?.hasWarning && state.channels.channelOrder.length === 1 && !state.channels.fallbackEnabled) {\n      return {\n        isValid: true,\n        message: '주 채널에 경고가 있습니다. 폴백 채널 추가를 권장합니다.',\n        type: 'warning' as const\n      };\n    }\n\n    return {\n      isValid: true,\n      message: '채널 설정이 완료되었습니다.',\n      type: 'success' as const\n    };\n  };\n\n  const validationStatus = getValidationStatus();\n\n  if (isLoadingChannels || isLoadingQuota) {\n    return (\n      <div className=\"space-y-6\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 flex items-center gap-2\">\n            <Settings className=\"h-6 w-6 text-blue-500\" />\n            채널 우선순위 설정\n          </h2>\n          <p className=\"text-gray-600 mt-1\">\n            메시지 전송 채널의 우선순위와 폴백 설정을 구성합니다.\n          </p>\n        </div>\n\n        <Card>\n          <CardContent className=\"pt-6 flex items-center justify-center\">\n            <div className=\"flex items-center gap-2\">\n              <Loader2 className=\"h-4 w-4 animate-spin text-blue-500\" />\n              <span className=\"text-sm text-gray-600\">채널 정보를 불러오는 중...</span>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (channelError || quotaError) {\n    return (\n      <div className=\"space-y-6\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 flex items-center gap-2\">\n            <Settings className=\"h-6 w-6 text-blue-500\" />\n            채널 우선순위 설정\n          </h2>\n          <p className=\"text-gray-600 mt-1\">\n            메시지 전송 채널의 우선순위와 폴백 설정을 구성합니다.\n          </p>\n        </div>\n\n        <Card className=\"border-red-200 bg-red-50\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-start gap-2\">\n              <AlertTriangle className=\"h-4 w-4 text-red-500 mt-0.5 flex-shrink-0\" />\n              <div>\n                <p className=\"font-medium text-red-800\">채널 정보를 불러올 수 없습니다</p>\n                <p className=\"text-sm text-red-700 mt-1\">\n                  네트워크 연결을 확인하고 페이지를 새로고침해 주세요.\n                </p>\n                <p className=\"text-xs text-red-600 mt-2\">\n                  오류: {channelError?.message || quotaError?.message}\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div>\n        <h2 className=\"text-2xl font-bold text-gray-900 flex items-center gap-2\">\n          <Settings className=\"h-6 w-6 text-blue-500\" />\n          채널 우선순위 설정\n        </h2>\n        <p className=\"text-gray-600 mt-1\">\n          메시지 전송 채널의 우선순위와 폴백 설정을 구성합니다.\n        </p>\n      </div>\n\n      {/* Real-time feedback */}\n      <WizardStepFeedback\n        stepNumber={3}\n        isLoading={isLoadingChannels || isLoadingQuota}\n        loadingText={isLoadingChannels ? \"채널 상태를 확인하는 중...\" : isLoadingQuota ? \"할당량 정보를 불러오는 중...\" : undefined}\n      />\n\n      {/* Quota Overview */}\n      {quotaData && (\n        <Card className=\"border-blue-200 bg-blue-50\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm\">오늘의 할당량 사용량</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              {Object.entries(quotaData.channelQuotas).map(([channel, quota]) => (\n                <div key={channel} className=\"flex items-center justify-between p-2 bg-white rounded border\">\n                  <div>\n                    <p className=\"font-medium text-sm\">{channel}</p>\n                    <p className=\"text-xs text-gray-600\">\n                      {quota.used.toLocaleString()} / {quota.limit.toLocaleString()}\n                    </p>\n                  </div>\n                  <Badge \n                    variant={quota.isNearLimit ? \"destructive\" : \"secondary\"}\n                    className=\"text-xs\"\n                  >\n                    {Math.round(quota.usagePercentage)}%\n                  </Badge>\n                </div>\n              ))}\n            </div>\n            <div className=\"mt-3 pt-3 border-t border-blue-200\">\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"font-medium text-blue-800\">전체 사용량</span>\n                <span className=\"font-mono text-blue-800\">\n                  {quotaData.totalUsedToday.toLocaleString()} / {quotaData.totalDailyLimit.toLocaleString()}\n                </span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Channel Priority Configuration */}\n      <ChannelPriorityList\n        channels={channelStatuses}\n        selectedChannels={state.channels.channelOrder}\n        onChannelsReorder={handleChannelsReorder}\n        fallbackEnabled={state.channels.fallbackEnabled}\n        onFallbackToggle={handleFallbackToggle}\n      />\n\n      {/* Validation Status */}\n      <Card className={`border-2 ${\n        validationStatus.type === 'error' ? 'border-red-200 bg-red-50' :\n        validationStatus.type === 'warning' ? 'border-orange-200 bg-orange-50' :\n        'border-green-200 bg-green-50'\n      }`}>\n        <CardContent className=\"pt-6\">\n          <div className=\"flex items-start gap-2\">\n            {validationStatus.type === 'error' ? (\n              <AlertTriangle className=\"h-4 w-4 text-red-500 mt-0.5 flex-shrink-0\" />\n            ) : validationStatus.type === 'warning' ? (\n              <AlertTriangle className=\"h-4 w-4 text-orange-500 mt-0.5 flex-shrink-0\" />\n            ) : (\n              <CheckCircle className=\"h-4 w-4 text-green-500 mt-0.5 flex-shrink-0\" />\n            )}\n            <div>\n              <p className={`font-medium ${\n                validationStatus.type === 'error' ? 'text-red-800' :\n                validationStatus.type === 'warning' ? 'text-orange-800' :\n                'text-green-800'\n              }`}>\n                {validationStatus.type === 'error' ? '설정 오류' :\n                 validationStatus.type === 'warning' ? '주의사항' :\n                 '설정 완료'}\n              </p>\n              <p className={`text-sm mt-1 ${\n                validationStatus.type === 'error' ? 'text-red-700' :\n                validationStatus.type === 'warning' ? 'text-orange-700' :\n                'text-green-700'\n              }`}>\n                {validationStatus.message}\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Validation Errors */}\n      {state.errors[3] && (\n        <div className=\"p-4 bg-red-50 border border-red-200 rounded-md\">\n          <div className=\"text-sm text-red-600\">\n            {state.errors[3].map((error, index) => (\n              <p key={index}>{error}</p>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6059, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6065, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,SAAS,sKAAgB,IAAI;AAEnC,MAAM,gBAAgB,sKAAgB,OAAO;AAE7C,MAAM,eAAe,sKAAgB,MAAM;AAE3C,MAAM,cAAc,sKAAgB,KAAK;AAEzC,MAAM,8BAAgB,0KAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC,sKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,0KAAM,UAAU,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,yMAAC;;0BACC,yMAAC;;;;;0BACD,yMAAC,sKAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,yMAAC,sKAAgB,KAAK;wBAAC,WAAU;;0CAC/B,yMAAC,2MAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,yMAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,yMAAC;QACC,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,yMAAC;QACC,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,0KAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC,sKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,sKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,0KAAM,UAAU,OAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,yMAAC,sKAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,sKAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 6210, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6216, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/ui/campaign-confirmation-modal.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Label } from '@/components/ui/label';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { \n  AlertTriangle, \n  Send, \n  Users, \n  MessageSquare,\n  DollarSign,\n  Loader2\n} from 'lucide-react';\nimport type { EstimateCampaignResponse } from '@/lib/api/campaigns';\n\ninterface CampaignConfirmationModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: () => void;\n  isLoading?: boolean;\n  campaignData: {\n    name: string;\n    messageBody: string;\n    channelOrder: string[];\n    fallbackEnabled: boolean;\n  };\n  estimate: EstimateCampaignResponse | null;\n}\n\nexport function CampaignConfirmationModal({\n  isOpen,\n  onClose,\n  onConfirm,\n  isLoading = false,\n  campaignData,\n  estimate\n}: CampaignConfirmationModalProps) {\n  const [confirmChecked, setConfirmChecked] = useState(false);\n  const [legalChecked, setLegalChecked] = useState(false);\n\n  const canProceed = confirmChecked && legalChecked && estimate?.quotaOk;\n\n  const handleConfirm = () => {\n    if (canProceed) {\n      onConfirm();\n    }\n  };\n\n  const handleClose = () => {\n    setConfirmChecked(false);\n    setLegalChecked(false);\n    onClose();\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleClose}>\n      <DialogContent className=\"sm:max-w-[600px]\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <Send className=\"h-5 w-5 text-blue-500\" />\n            캠페인 발송 확인\n          </DialogTitle>\n          <DialogDescription>\n            캠페인 발송 전 마지막 확인입니다. 발송 후에는 취소할 수 없습니다.\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Campaign Summary */}\n          <div className=\"space-y-4\">\n            <h3 className=\"font-medium text-gray-900\">캠페인 요약</h3>\n            \n            <div className=\"grid grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg\">\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center gap-2\">\n                  <MessageSquare className=\"h-4 w-4 text-blue-500\" />\n                  <span className=\"text-sm font-medium\">캠페인명</span>\n                </div>\n                <p className=\"text-sm text-gray-700 pl-6\">{campaignData.name}</p>\n\n                <div className=\"flex items-center gap-2\">\n                  <Users className=\"h-4 w-4 text-green-500\" />\n                  <span className=\"text-sm font-medium\">수신자 수</span>\n                </div>\n                <p className=\"text-sm text-gray-700 pl-6\">\n                  {estimate ? `${estimate.recipientCount.toLocaleString()}명` : '계산 중...'}\n                </p>\n              </div>\n\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center gap-2\">\n                  <Send className=\"h-4 w-4 text-purple-500\" />\n                  <span className=\"text-sm font-medium\">전송 채널</span>\n                </div>\n                <div className=\"pl-6 space-y-1\">\n                  {campaignData.channelOrder.map((channel, index) => (\n                    <Badge key={channel} variant=\"secondary\" className=\"text-xs\">\n                      {index + 1}. {channel}\n                      {index > 0 && campaignData.fallbackEnabled && ' (폴백)'}\n                    </Badge>\n                  ))}\n                </div>\n\n                <div className=\"flex items-center gap-2\">\n                  <DollarSign className=\"h-4 w-4 text-orange-500\" />\n                  <span className=\"text-sm font-medium\">예상 비용</span>\n                </div>\n                <p className=\"text-sm text-gray-700 pl-6\">\n                  {estimate ? `${estimate.estimatedCost.toLocaleString()}원` : '계산 중...'}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Message Preview */}\n          <div className=\"space-y-2\">\n            <h3 className=\"font-medium text-gray-900\">메시지 미리보기</h3>\n            <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-lg max-h-32 overflow-y-auto\">\n              <p className=\"text-sm text-gray-800 whitespace-pre-wrap\">\n                {campaignData.messageBody}\n              </p>\n            </div>\n          </div>\n\n          {/* Quota Warning */}\n          {estimate && !estimate.quotaOk && (\n            <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n              <div className=\"flex items-start gap-2\">\n                <AlertTriangle className=\"h-4 w-4 text-red-500 mt-0.5 flex-shrink-0\" />\n                <div>\n                  <p className=\"font-medium text-red-800\">할당량 초과</p>\n                  <p className=\"text-sm text-red-700 mt-1\">\n                    이 캠페인은 일일 할당량을 초과합니다. 발송할 수 없습니다.\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Confirmation Checkboxes */}\n          <div className=\"space-y-4 pt-4 border-t\">\n            <div className=\"flex items-start space-x-3\">\n              <Checkbox \n                id=\"confirm-details\"\n                checked={confirmChecked}\n                onCheckedChange={(checked) => setConfirmChecked(checked as boolean)}\n              />\n              <Label htmlFor=\"confirm-details\" className=\"text-sm leading-5\">\n                위 내용을 확인했으며, 캠페인 발송에 동의합니다.\n              </Label>\n            </div>\n\n            <div className=\"flex items-start space-x-3\">\n              <Checkbox \n                id=\"legal-consent\"\n                checked={legalChecked}\n                onCheckedChange={(checked) => setLegalChecked(checked as boolean)}\n              />\n              <Label htmlFor=\"legal-consent\" className=\"text-sm leading-5\">\n                정보통신망 이용촉진 및 정보보호 등에 관한 법률 및 개인정보보호법을 준수하며, \n                수신자의 사전 동의를 받았음을 확인합니다.\n              </Label>\n            </div>\n          </div>\n        </div>\n\n        <DialogFooter>\n          <Button \n            variant=\"outline\" \n            onClick={handleClose}\n            disabled={isLoading}\n          >\n            취소\n          </Button>\n          <Button \n            onClick={handleConfirm}\n            disabled={!canProceed || isLoading}\n            className=\"bg-blue-600 hover:bg-blue-700\"\n          >\n            {isLoading ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                발송 중...\n              </>\n            ) : (\n              <>\n                <Send className=\"h-4 w-4 mr-2\" />\n                캠페인 발송\n              </>\n            )}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6700, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6706, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/lib/utils/error-handling.ts"],"sourcesContent":["'use client';\n\nimport { AxiosError } from 'axios';\n\n// Problem Details standard from ASP.NET Core\nexport interface ProblemDetails {\n  type?: string;\n  title?: string;\n  status?: number;\n  detail?: string;\n  instance?: string;\n  extensions?: Record<string, any>;\n}\n\n// User-friendly error message mapping\nexport interface UserFriendlyError {\n  title: string;\n  message: string;\n  severity: 'error' | 'warning' | 'info';\n  actionable: boolean;\n  retryable: boolean;\n}\n\n// Error code mappings for common API errors\nconst ERROR_MAPPINGS: Record<string, UserFriendlyError> = {\n  // Validation errors\n  'VALIDATION_ERROR': {\n    title: '입력 값 오류',\n    message: '입력한 정보를 다시 확인해주세요.',\n    severity: 'error',\n    actionable: true,\n    retryable: true,\n  },\n  'REQUIRED_FIELD_MISSING': {\n    title: '필수 항목 누락',\n    message: '모든 필수 항목을 입력해주세요.',\n    severity: 'error',\n    actionable: true,\n    retryable: true,\n  },\n  \n  // Quota and limits\n  'QUOTA_EXCEEDED': {\n    title: '할당량 초과',\n    message: '일일 메시지 할당량을 초과했습니다. 내일 다시 시도해주세요.',\n    severity: 'error',\n    actionable: false,\n    retryable: false,\n  },\n  'QUOTA_INSUFFICIENT': {\n    title: '할당량 부족',\n    message: '남은 할당량이 부족합니다. 수신자 수를 줄이거나 내일 다시 시도해주세요.',\n    severity: 'warning',\n    actionable: true,\n    retryable: false,\n  },\n  \n  // Channel errors\n  'CHANNEL_UNAVAILABLE': {\n    title: '채널 사용 불가',\n    message: '선택한 채널이 현재 사용할 수 없습니다. 다른 채널을 선택해주세요.',\n    severity: 'error',\n    actionable: true,\n    retryable: true,\n  },\n  'CHANNEL_CONFIGURATION_ERROR': {\n    title: '채널 설정 오류',\n    message: '채널 설정에 문제가 있습니다. 관리자에게 문의해주세요.',\n    severity: 'error',\n    actionable: false,\n    retryable: false,\n  },\n  \n  // Campaign errors\n  'CAMPAIGN_CREATION_FAILED': {\n    title: '캠페인 생성 실패',\n    message: '캠페인을 생성하지 못했습니다. 잠시 후 다시 시도해주세요.',\n    severity: 'error',\n    actionable: false,\n    retryable: true,\n  },\n  'CAMPAIGN_SEND_FAILED': {\n    title: '캠페인 발송 실패',\n    message: '캠페인 발송 중 오류가 발생했습니다. 상태를 확인하고 필요시 다시 시도해주세요.',\n    severity: 'error',\n    actionable: false,\n    retryable: true,\n  },\n  \n  // Network and server errors\n  'NETWORK_ERROR': {\n    title: '네트워크 오류',\n    message: '인터넷 연결을 확인하고 다시 시도해주세요.',\n    severity: 'error',\n    actionable: false,\n    retryable: true,\n  },\n  'SERVER_ERROR': {\n    title: '서버 오류',\n    message: '서버에 일시적인 문제가 발생했습니다. 잠시 후 다시 시도해주세요.',\n    severity: 'error',\n    actionable: false,\n    retryable: true,\n  },\n  'TIMEOUT_ERROR': {\n    title: '요청 시간 초과',\n    message: '요청 시간이 초과되었습니다. 다시 시도해주세요.',\n    severity: 'warning',\n    actionable: false,\n    retryable: true,\n  },\n};\n\n// Default error for unhandled cases\nconst DEFAULT_ERROR: UserFriendlyError = {\n  title: '오류 발생',\n  message: '알 수 없는 오류가 발생했습니다. 잠시 후 다시 시도해주세요.',\n  severity: 'error',\n  actionable: false,\n  retryable: true,\n};\n\n/**\n * Map API error to user-friendly message\n */\nexport function mapApiError(error: unknown): UserFriendlyError {\n  // Handle Axios errors\n  if (error instanceof AxiosError) {\n    const response = error.response;\n    const data = response?.data;\n    \n    // Handle ProblemDetails response\n    if (data && typeof data === 'object' && 'title' in data) {\n      const problemDetails = data as ProblemDetails;\n      \n      // Try to find specific error mapping\n      const errorType = problemDetails.type || problemDetails.title || '';\n      const mapping = ERROR_MAPPINGS[errorType];\n      \n      if (mapping) {\n        return {\n          ...mapping,\n          message: problemDetails.detail || mapping.message,\n        };\n      }\n    }\n    \n    // Handle HTTP status codes\n    const status = response?.status;\n    switch (status) {\n      case 400:\n        return ERROR_MAPPINGS['VALIDATION_ERROR'];\n      case 401:\n        return {\n          title: '인증 오류',\n          message: '로그인이 필요합니다.',\n          severity: 'error',\n          actionable: true,\n          retryable: false,\n        };\n      case 403:\n        return {\n          title: '권한 오류',\n          message: '이 작업을 수행할 권한이 없습니다.',\n          severity: 'error',\n          actionable: false,\n          retryable: false,\n        };\n      case 404:\n        return {\n          title: '리소스 없음',\n          message: '요청한 정보를 찾을 수 없습니다.',\n          severity: 'error',\n          actionable: false,\n          retryable: false,\n        };\n      case 429:\n        return {\n          title: '요청 한도 초과',\n          message: '너무 많은 요청을 보냈습니다. 잠시 후 다시 시도해주세요.',\n          severity: 'warning',\n          actionable: false,\n          retryable: true,\n        };\n      case 500:\n      case 502:\n      case 503:\n      case 504:\n        return ERROR_MAPPINGS['SERVER_ERROR'];\n      default:\n        if (error.code === 'ECONNABORTED') {\n          return ERROR_MAPPINGS['TIMEOUT_ERROR'];\n        }\n        if (error.code === 'ERR_NETWORK') {\n          return ERROR_MAPPINGS['NETWORK_ERROR'];\n        }\n    }\n  }\n  \n  // Handle network errors\n  if (error instanceof Error) {\n    if (error.message.includes('Network Error') || error.message.includes('fetch')) {\n      return ERROR_MAPPINGS['NETWORK_ERROR'];\n    }\n  }\n  \n  return DEFAULT_ERROR;\n}\n\n/**\n * Create retry delay with exponential backoff\n */\nexport function getRetryDelay(attemptIndex: number, baseDelay = 1000): number {\n  return Math.min(baseDelay * Math.pow(2, attemptIndex), 10000);\n}\n\n/**\n * Check if error is retryable based on status code and error type\n */\nexport function isRetryableError(error: unknown): boolean {\n  const mappedError = mapApiError(error);\n  return mappedError.retryable;\n}\n\n/**\n * Format error message for display\n */\nexport function formatErrorMessage(error: UserFriendlyError): string {\n  return `${error.title}: ${error.message}`;\n}\n\n/**\n * Extract validation errors from ProblemDetails extensions\n */\nexport function extractValidationErrors(error: unknown): Record<string, string[]> | null {\n  if (error instanceof AxiosError) {\n    const data = error.response?.data;\n    if (data && typeof data === 'object' && 'extensions' in data) {\n      const problemDetails = data as ProblemDetails;\n      const errors = problemDetails.extensions?.errors;\n      if (errors && typeof errors === 'object') {\n        return errors as Record<string, string[]>;\n      }\n    }\n  }\n  return null;\n}"],"names":[],"mappings":";;;;;;;AAEA;AAFA;;AAuBA,4CAA4C;AAC5C,MAAM,iBAAoD;IACxD,oBAAoB;IACpB,oBAAoB;QAClB,OAAO;QACP,SAAS;QACT,UAAU;QACV,YAAY;QACZ,WAAW;IACb;IACA,0BAA0B;QACxB,OAAO;QACP,SAAS;QACT,UAAU;QACV,YAAY;QACZ,WAAW;IACb;IAEA,mBAAmB;IACnB,kBAAkB;QAChB,OAAO;QACP,SAAS;QACT,UAAU;QACV,YAAY;QACZ,WAAW;IACb;IACA,sBAAsB;QACpB,OAAO;QACP,SAAS;QACT,UAAU;QACV,YAAY;QACZ,WAAW;IACb;IAEA,iBAAiB;IACjB,uBAAuB;QACrB,OAAO;QACP,SAAS;QACT,UAAU;QACV,YAAY;QACZ,WAAW;IACb;IACA,+BAA+B;QAC7B,OAAO;QACP,SAAS;QACT,UAAU;QACV,YAAY;QACZ,WAAW;IACb;IAEA,kBAAkB;IAClB,4BAA4B;QAC1B,OAAO;QACP,SAAS;QACT,UAAU;QACV,YAAY;QACZ,WAAW;IACb;IACA,wBAAwB;QACtB,OAAO;QACP,SAAS;QACT,UAAU;QACV,YAAY;QACZ,WAAW;IACb;IAEA,4BAA4B;IAC5B,iBAAiB;QACf,OAAO;QACP,SAAS;QACT,UAAU;QACV,YAAY;QACZ,WAAW;IACb;IACA,gBAAgB;QACd,OAAO;QACP,SAAS;QACT,UAAU;QACV,YAAY;QACZ,WAAW;IACb;IACA,iBAAiB;QACf,OAAO;QACP,SAAS;QACT,UAAU;QACV,YAAY;QACZ,WAAW;IACb;AACF;AAEA,oCAAoC;AACpC,MAAM,gBAAmC;IACvC,OAAO;IACP,SAAS;IACT,UAAU;IACV,YAAY;IACZ,WAAW;AACb;AAKO,SAAS,YAAY,KAAc;IACxC,sBAAsB;IACtB,IAAI,iBAAiB,6JAAA,CAAA,aAAU,EAAE;QAC/B,MAAM,WAAW,MAAM,QAAQ;QAC/B,MAAM,OAAO,UAAU;QAEvB,iCAAiC;QACjC,IAAI,QAAQ,OAAO,SAAS,YAAY,WAAW,MAAM;YACvD,MAAM,iBAAiB;YAEvB,qCAAqC;YACrC,MAAM,YAAY,eAAe,IAAI,IAAI,eAAe,KAAK,IAAI;YACjE,MAAM,UAAU,cAAc,CAAC,UAAU;YAEzC,IAAI,SAAS;gBACX,OAAO;oBACL,GAAG,OAAO;oBACV,SAAS,eAAe,MAAM,IAAI,QAAQ,OAAO;gBACnD;YACF;QACF;QAEA,2BAA2B;QAC3B,MAAM,SAAS,UAAU;QACzB,OAAQ;YACN,KAAK;gBACH,OAAO,cAAc,CAAC,mBAAmB;YAC3C,KAAK;gBACH,OAAO;oBACL,OAAO;oBACP,SAAS;oBACT,UAAU;oBACV,YAAY;oBACZ,WAAW;gBACb;YACF,KAAK;gBACH,OAAO;oBACL,OAAO;oBACP,SAAS;oBACT,UAAU;oBACV,YAAY;oBACZ,WAAW;gBACb;YACF,KAAK;gBACH,OAAO;oBACL,OAAO;oBACP,SAAS;oBACT,UAAU;oBACV,YAAY;oBACZ,WAAW;gBACb;YACF,KAAK;gBACH,OAAO;oBACL,OAAO;oBACP,SAAS;oBACT,UAAU;oBACV,YAAY;oBACZ,WAAW;gBACb;YACF,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;gBACH,OAAO,cAAc,CAAC,eAAe;YACvC;gBACE,IAAI,MAAM,IAAI,KAAK,gBAAgB;oBACjC,OAAO,cAAc,CAAC,gBAAgB;gBACxC;gBACA,IAAI,MAAM,IAAI,KAAK,eAAe;oBAChC,OAAO,cAAc,CAAC,gBAAgB;gBACxC;QACJ;IACF;IAEA,wBAAwB;IACxB,IAAI,iBAAiB,OAAO;QAC1B,IAAI,MAAM,OAAO,CAAC,QAAQ,CAAC,oBAAoB,MAAM,OAAO,CAAC,QAAQ,CAAC,UAAU;YAC9E,OAAO,cAAc,CAAC,gBAAgB;QACxC;IACF;IAEA,OAAO;AACT;AAKO,SAAS,cAAc,YAAoB,EAAE,YAAY,IAAI;IAClE,OAAO,KAAK,GAAG,CAAC,YAAY,KAAK,GAAG,CAAC,GAAG,eAAe;AACzD;AAKO,SAAS,iBAAiB,KAAc;IAC7C,MAAM,cAAc,YAAY;IAChC,OAAO,YAAY,SAAS;AAC9B;AAKO,SAAS,mBAAmB,KAAwB;IACzD,OAAO,GAAG,MAAM,KAAK,CAAC,EAAE,EAAE,MAAM,OAAO,EAAE;AAC3C;AAKO,SAAS,wBAAwB,KAAc;IACpD,IAAI,iBAAiB,6JAAA,CAAA,aAAU,EAAE;QAC/B,MAAM,OAAO,MAAM,QAAQ,EAAE;QAC7B,IAAI,QAAQ,OAAO,SAAS,YAAY,gBAAgB,MAAM;YAC5D,MAAM,iBAAiB;YACvB,MAAM,SAAS,eAAe,UAAU,EAAE;YAC1C,IAAI,UAAU,OAAO,WAAW,UAAU;gBACxC,OAAO;YACT;QACF;IACF;IACA,OAAO;AACT"}},
    {"offset": {"line": 6912, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6918, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/lib/api/campaigns.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5284';\n\n// Request interfaces\nexport interface CampaignChannelRequest {\n  channel: string;\n  orderIndex: number;\n  fallbackEnabled: boolean;\n}\n\nexport interface CampaignAudienceRequest {\n  groupIds?: string[];\n  segmentIds?: string[];\n  filterJson?: Record<string, any>;\n  includeAll: boolean;\n}\n\nexport interface CreateCampaignRequest {\n  name: string;\n  messageTitle?: string;\n  messageBody: string;\n  variables?: Record<string, string>;\n  channels: CampaignChannelRequest[];\n  audience: CampaignAudienceRequest;\n  scheduledAt?: string;\n}\n\nexport interface EstimateCampaignRequest {\n  audience: CampaignAudienceRequest;\n  channels: CampaignChannelRequest[];\n}\n\n// Response interfaces\nexport interface CreateCampaignResponse {\n  campaignId: string;\n  status: string;\n  message: string;\n  createdAt: string;\n}\n\nexport interface EstimateCampaignResponse {\n  recipientCount: number;\n  estimatedCost: number;\n  quotaRequired: number;\n  quotaOk: boolean;\n  currency: string;\n  channelBreakdown?: Record<string, number>;\n}\n\nexport interface CampaignListItem {\n  id: string;\n  name: string;\n  status: 'draft' | 'scheduled' | 'active' | 'paused' | 'completed' | 'cancelled';\n  createdAt: string;\n  scheduledAt?: string;\n  completedAt?: string;\n  recipientCount?: number;\n  successCount?: number;\n  failureCount?: number;\n  channels: string[];\n  tags?: string[];\n}\n\nexport interface CampaignListResponse {\n  campaigns: CampaignListItem[];\n  totalCount: number;\n  hasNextPage: boolean;\n  page: number;\n  pageSize: number;\n}\n\nexport interface CampaignListParams {\n  page?: number;\n  pageSize?: number;\n  search?: string;\n  status?: string[];\n  channels?: string[];\n  sortBy?: 'createdAt' | 'scheduledAt' | 'name' | 'status';\n  sortOrder?: 'asc' | 'desc';\n}\n\nclass CampaignsAPI {\n  private getAuthHeaders() {\n    const token = localStorage.getItem('auth-token');\n    return token ? { Authorization: `Bearer ${token}` } : {};\n  }\n\n  async estimateCampaign(request: EstimateCampaignRequest): Promise<EstimateCampaignResponse> {\n    const response = await axios.post(\n      `${API_BASE_URL}/api/campaigns/estimate`,\n      request,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n\n  async createCampaign(request: CreateCampaignRequest): Promise<CreateCampaignResponse> {\n    const response = await axios.post(\n      `${API_BASE_URL}/api/campaigns`,\n      request,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n\n  async getCampaigns(params: CampaignListParams = {}): Promise<CampaignListResponse> {\n    const searchParams = new URLSearchParams();\n    \n    if (params.page) searchParams.set('page', params.page.toString());\n    if (params.pageSize) searchParams.set('pageSize', params.pageSize.toString());\n    if (params.search) searchParams.set('search', params.search);\n    if (params.status?.length) searchParams.set('status', params.status.join(','));\n    if (params.channels?.length) searchParams.set('channels', params.channels.join(','));\n    if (params.sortBy) searchParams.set('sortBy', params.sortBy);\n    if (params.sortOrder) searchParams.set('sortOrder', params.sortOrder);\n\n    const url = `${API_BASE_URL}/api/campaigns${searchParams.toString() ? `?${searchParams.toString()}` : ''}`;\n    \n    const response = await axios.get(url, {\n      headers: this.getAuthHeaders()\n    });\n\n    return response.data;\n  }\n\n  async getCampaign(id: string): Promise<CampaignListItem> {\n    const response = await axios.get(\n      `${API_BASE_URL}/api/campaigns/${id}`,\n      { headers: this.getAuthHeaders() }\n    );\n\n    return response.data;\n  }\n}\n\nexport const campaignsAPI = new CampaignsAPI();"],"names":[],"mappings":";;;AAEqB;AAFrB;;AAEA,MAAM,eAAe,6DAAmC;AAgFxD,MAAM;IACI,iBAAiB;QACvB,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,OAAO,QAAQ;YAAE,eAAe,CAAC,OAAO,EAAE,OAAO;QAAC,IAAI,CAAC;IACzD;IAEA,MAAM,iBAAiB,OAAgC,EAAqC;QAC1F,MAAM,WAAW,MAAM,oJAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,GAAG,aAAa,uBAAuB,CAAC,EACxC,SACA;YAAE,SAAS,IAAI,CAAC,cAAc;QAAG;QAGnC,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,eAAe,OAA8B,EAAmC;QACpF,MAAM,WAAW,MAAM,oJAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,GAAG,aAAa,cAAc,CAAC,EAC/B,SACA;YAAE,SAAS,IAAI,CAAC,cAAc;QAAG;QAGnC,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,aAAa,SAA6B,CAAC,CAAC,EAAiC;QACjF,MAAM,eAAe,IAAI;QAEzB,IAAI,OAAO,IAAI,EAAE,aAAa,GAAG,CAAC,QAAQ,OAAO,IAAI,CAAC,QAAQ;QAC9D,IAAI,OAAO,QAAQ,EAAE,aAAa,GAAG,CAAC,YAAY,OAAO,QAAQ,CAAC,QAAQ;QAC1E,IAAI,OAAO,MAAM,EAAE,aAAa,GAAG,CAAC,UAAU,OAAO,MAAM;QAC3D,IAAI,OAAO,MAAM,EAAE,QAAQ,aAAa,GAAG,CAAC,UAAU,OAAO,MAAM,CAAC,IAAI,CAAC;QACzE,IAAI,OAAO,QAAQ,EAAE,QAAQ,aAAa,GAAG,CAAC,YAAY,OAAO,QAAQ,CAAC,IAAI,CAAC;QAC/E,IAAI,OAAO,MAAM,EAAE,aAAa,GAAG,CAAC,UAAU,OAAO,MAAM;QAC3D,IAAI,OAAO,SAAS,EAAE,aAAa,GAAG,CAAC,aAAa,OAAO,SAAS;QAEpE,MAAM,MAAM,GAAG,aAAa,cAAc,EAAE,aAAa,QAAQ,KAAK,CAAC,CAAC,EAAE,aAAa,QAAQ,IAAI,GAAG,IAAI;QAE1G,MAAM,WAAW,MAAM,oJAAA,CAAA,UAAK,CAAC,GAAG,CAAC,KAAK;YACpC,SAAS,IAAI,CAAC,cAAc;QAC9B;QAEA,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,YAAY,EAAU,EAA6B;QACvD,MAAM,WAAW,MAAM,oJAAA,CAAA,UAAK,CAAC,GAAG,CAC9B,GAAG,aAAa,eAAe,EAAE,IAAI,EACrC;YAAE,SAAS,IAAI,CAAC,cAAc;QAAG;QAGnC,OAAO,SAAS,IAAI;IACtB;AACF;AAEO,MAAM,eAAe,IAAI"}},
    {"offset": {"line": 6970, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6976, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/lib/hooks/use-campaigns.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { campaignsAPI, type EstimateCampaignRequest, type CreateCampaignRequest, type CampaignListParams } from '@/lib/api/campaigns';\n\n// Query keys\nconst QUERY_KEYS = {\n  campaigns: (params: CampaignListParams) => ['campaigns', params] as const,\n  campaign: (id: string) => ['campaign', id] as const,\n} as const;\n\n// Hook for campaigns list with search and filters\nexport function useCampaigns(params: CampaignListParams = {}) {\n  return useQuery({\n    queryKey: QUERY_KEYS.campaigns(params),\n    queryFn: () => campaignsAPI.getCampaigns(params),\n    keepPreviousData: true,\n    staleTime: 30 * 1000, // 30 seconds\n    refetchInterval: 10 * 1000, // Refetch every 10 seconds for campaign status updates\n  });\n}\n\n// Hook for single campaign details\nexport function useCampaign(id: string) {\n  return useQuery({\n    queryKey: QUERY_KEYS.campaign(id),\n    queryFn: () => campaignsAPI.getCampaign(id),\n    enabled: !!id,\n    staleTime: 2 * 60 * 1000, // 2 minutes\n  });\n}\n\n// Hook for campaign estimation\nexport function useEstimateCampaign() {\n  return useMutation({\n    mutationFn: (request: EstimateCampaignRequest) => campaignsAPI.estimateCampaign(request),\n    onError: (error) => {\n      console.error('Campaign estimation failed:', error);\n    },\n  });\n}\n\n// Hook for campaign creation\nexport function useCreateCampaign() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (request: CreateCampaignRequest) => campaignsAPI.createCampaign(request),\n    onSuccess: () => {\n      // Invalidate any campaign-related queries when a new campaign is created\n      queryClient.invalidateQueries({ queryKey: ['campaigns'] });\n      queryClient.invalidateQueries({ queryKey: ['quotas'] });\n    },\n    onError: (error) => {\n      console.error('Campaign creation failed:', error);\n    },\n  });\n}"],"names":[],"mappings":";;;;;;AACA;AADA;AAAA;AAAA;;;;AAGA,aAAa;AACb,MAAM,aAAa;IACjB,WAAW,CAAC,SAA+B;YAAC;YAAa;SAAO;IAChE,UAAU,CAAC,KAAe;YAAC;YAAY;SAAG;AAC5C;AAGO,SAAS,aAAa,SAA6B,CAAC,CAAC;;IAC1D,OAAO,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAE;QACd,UAAU,WAAW,SAAS,CAAC;QAC/B,OAAO;qCAAE,IAAM,6IAAA,CAAA,eAAY,CAAC,YAAY,CAAC;;QACzC,kBAAkB;QAClB,WAAW,KAAK;QAChB,iBAAiB,KAAK;IACxB;AACF;GARgB;;QACP,8KAAA,CAAA,WAAQ;;;AAUV,SAAS,YAAY,EAAU;;IACpC,OAAO,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAE;QACd,UAAU,WAAW,QAAQ,CAAC;QAC9B,OAAO;oCAAE,IAAM,6IAAA,CAAA,eAAY,CAAC,WAAW,CAAC;;QACxC,SAAS,CAAC,CAAC;QACX,WAAW,IAAI,KAAK;IACtB;AACF;IAPgB;;QACP,8KAAA,CAAA,WAAQ;;;AASV,SAAS;;IACd,OAAO,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE;QACjB,UAAU;+CAAE,CAAC,UAAqC,6IAAA,CAAA,eAAY,CAAC,gBAAgB,CAAC;;QAChF,OAAO;+CAAE,CAAC;gBACR,QAAQ,KAAK,CAAC,+BAA+B;YAC/C;;IACF;AACF;IAPgB;;QACP,iLAAA,CAAA,cAAW;;;AASb,SAAS;;IACd,MAAM,cAAc,CAAA,GAAA,yLAAA,CAAA,iBAAc,AAAD;IAEjC,OAAO,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE;QACjB,UAAU;6CAAE,CAAC,UAAmC,6IAAA,CAAA,eAAY,CAAC,cAAc,CAAC;;QAC5E,SAAS;6CAAE;gBACT,yEAAyE;gBACzE,YAAY,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;qBAAY;gBAAC;gBACxD,YAAY,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;qBAAS;gBAAC;YACvD;;QACA,OAAO;6CAAE,CAAC;gBACR,QAAQ,KAAK,CAAC,6BAA6B;YAC7C;;IACF;AACF;IAdgB;;QACM,yLAAA,CAAA,iBAAc;QAE3B,iLAAA,CAAA,cAAW"}},
    {"offset": {"line": 7089, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7095, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/components/campaign-wizard/review-step.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useWizard } from '@/lib/context/campaign-wizard-context';\nimport { useCampaignError, ErrorDisplay } from '@/lib/context/campaign-error-context';\nimport { Alert, AlertTitle, AlertDescription } from '@/components/ui/alert';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { CampaignConfirmationModal } from '@/components/ui/campaign-confirmation-modal';\nimport { WizardStepFeedback } from '@/components/ui/wizard-feedback';\nimport { useToast } from '@/hooks/use-toast';\nimport { mapApiError } from '@/lib/utils/error-handling';\nimport { \n  CheckCircle2, \n  Users, \n  MessageSquare, \n  Settings, \n  Send,\n  AlertCircle,\n  DollarSign,\n  Clock,\n  Calendar,\n  Eye,\n  Edit,\n  Loader2,\n  RefreshCw\n} from 'lucide-react';\nimport { useEstimateCampaign, useCreateCampaign } from '@/lib/hooks/use-campaigns';\nimport type { EstimateCampaignRequest, CreateCampaignRequest } from '@/lib/api/campaigns';\n\nexport function ReviewStep() {\n  const { state, dispatch, goToStep, validateCurrentStep, resetWizard } = useWizard();\n  const { addStepError, clearStepErrors, setLoading } = useCampaignError();\n  const router = useRouter();\n  const { toast } = useToast();\n  \n  const [scheduleEnabled, setScheduleEnabled] = useState(false);\n  const [scheduledDate, setScheduledDate] = useState('');\n  const [scheduledTime, setScheduledTime] = useState('');\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [validationError, setValidationError] = useState<string | null>(null);\n  const [quotaError, setQuotaError] = useState<string | null>(null);\n\n  // API hooks\n  const estimateMutation = useEstimateCampaign();\n  const createMutation = useCreateCampaign();\n\n  // Build request payload from wizard state\n  const buildEstimateRequest = (): EstimateCampaignRequest => {\n    return {\n      audience: {\n        groupIds: state.audience.groupIds,\n        segmentIds: state.audience.segmentIds,\n        filterJson: state.audience.filterJson,\n        includeAll: state.audience.includeAll\n      },\n      channels: state.channels.channelOrder.map((channelName, index) => ({\n        channel: channelName,\n        orderIndex: index,\n        fallbackEnabled: index > 0 && state.channels.fallbackEnabled\n      }))\n    };\n  };\n\n  const buildCreateRequest = (): CreateCampaignRequest => {\n    return {\n      name: state.message.name,\n      messageTitle: state.message.messageTitle,\n      messageBody: state.message.messageBody,\n      variables: state.message.variables,\n      channels: state.channels.channelOrder.map((channelName, index) => ({\n        channel: channelName,\n        orderIndex: index,\n        fallbackEnabled: index > 0 && state.channels.fallbackEnabled\n      })),\n      audience: {\n        groupIds: state.audience.groupIds,\n        segmentIds: state.audience.segmentIds,\n        filterJson: state.audience.filterJson,\n        includeAll: state.audience.includeAll\n      },\n      scheduledAt: scheduleEnabled && scheduledDate && scheduledTime \n        ? `${scheduledDate}T${scheduledTime}:00` \n        : undefined\n    };\n  };\n\n  // Auto-estimate on component mount\n  useEffect(() => {\n    const request = buildEstimateRequest();\n    if (state.channels.channelOrder.length > 0) {\n      setLoading(true, '비용을 추정하고 있습니다...');\n      estimateMutation.mutate(request, {\n        onSuccess: () => {\n          setLoading(false);\n          clearStepErrors(4);\n          setValidationError(null);\n          setQuotaError(null);\n        },\n        onError: (error) => {\n          setLoading(false);\n          const mappedError = mapApiError(error);\n          addStepError(4, mappedError);\n        }\n      });\n    }\n  }, []);\n\n  const handleEstimate = () => {\n    const request = buildEstimateRequest();\n    setLoading(true, '비용을 다시 추정하고 있습니다...');\n    clearStepErrors(4);\n    setValidationError(null);\n    setQuotaError(null);\n    \n    estimateMutation.mutate(request, {\n      onSuccess: () => {\n        setLoading(false);\n        toast({\n          title: '추정 완료',\n          description: '최신 비용이 반영되었습니다.',\n        });\n      },\n      onError: (error) => {\n        setLoading(false);\n        const mappedError = mapApiError(error);\n        addStepError(4, mappedError);\n        toast({\n          title: '추정 실패',\n          description: mappedError.message,\n          variant: 'destructive',\n        });\n      }\n    });\n  };\n\n  const handleSendClick = () => {\n    // Clear previous errors\n    setValidationError(null);\n    setQuotaError(null);\n    clearStepErrors(4);\n    \n    const validation = validateCurrentStep();\n    if (!validation.isValid) {\n      const errorMessage = validation.errors.join(', ');\n      setValidationError(errorMessage);\n      addStepError(4, {\n        title: '검증 오류',\n        message: errorMessage,\n        severity: 'error',\n        actionable: true,\n        retryable: true,\n      });\n      return;\n    }\n\n    if (!estimateMutation.data) {\n      const errorMessage = '캠페인을 발송하기 전에 비용을 추정해주세요.';\n      setValidationError(errorMessage);\n      addStepError(4, {\n        title: '비용 추정 필요',\n        message: errorMessage,\n        severity: 'warning',\n        actionable: true,\n        retryable: true,\n      });\n      return;\n    }\n\n    if (!estimateMutation.data.quotaOk) {\n      const errorMessage = '일일 할당량을 초과하여 캠페인을 발송할 수 없습니다.';\n      setQuotaError(errorMessage);\n      addStepError(4, {\n        title: '할당량 초과',\n        message: errorMessage,\n        severity: 'error',\n        actionable: false,\n        retryable: false,\n      });\n      return;\n    }\n\n    setShowConfirmModal(true);\n  };\n\n  const handleConfirmSend = () => {\n    const request = buildCreateRequest();\n    setLoading(true, '캠페인을 발송하고 있습니다...');\n    \n    createMutation.mutate(request, {\n      onSuccess: (response) => {\n        setLoading(false);\n        toast({\n          title: \"캠페인 발송 시작\",\n          description: `캠페인이 성공적으로 생성되었습니다. 발송을 시작합니다.`,\n        });\n        \n        // Reset wizard state\n        resetWizard();\n        \n        // Close modal\n        setShowConfirmModal(false);\n        \n        // Redirect to campaigns list or monitoring page\n        router.push('/campaigns');\n      },\n      onError: (error: any) => {\n        setLoading(false);\n        const mappedError = mapApiError(error);\n        \n        // Close modal first\n        setShowConfirmModal(false);\n        \n        // Show error in step\n        addStepError(4, mappedError);\n        \n        toast({\n          title: \"발송 실패\",\n          description: mappedError.message,\n          variant: \"destructive\",\n        });\n      }\n    });\n  };\n\n  // Summary data helpers\n  const getSummaryData = () => {\n    const audienceSummary = state.audience.includeAll\n      ? \"전체 연락처\"\n      : [\n          ...state.audience.groupIds.map(id => `그룹 ${id.split('-')[1] || id}`),\n          ...state.audience.segmentIds.map(id => `세그먼트 ${id.split('-')[1] || id}`)\n        ].join(', ') || '맞춤 필터';\n\n    const channelSummary = state.channels.channelOrder.join(' → ');\n\n    return { audienceSummary, channelSummary };\n  };\n\n  const { audienceSummary, channelSummary } = getSummaryData();\n  const estimate = estimateMutation.data;\n  const isEstimating = estimateMutation.isPending;\n  const isSending = createMutation.isPending;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div>\n        <h2 className=\"text-2xl font-bold text-gray-900 flex items-center gap-2\">\n          <CheckCircle2 className=\"h-6 w-6 text-green-500\" />\n          캠페인 검토 및 발송\n        </h2>\n        <p className=\"text-gray-600 mt-1\">\n          캠페인 설정을 검토하고 발송하세요. 발송 전 모든 설정을 수정할 수 있습니다.\n        </p>\n      </div>\n\n      {/* Real-time feedback */}\n      <WizardStepFeedback\n        stepNumber={4}\n        isLoading={isEstimating}\n        loadingText={isEstimating ? \"비용을 추정하는 중...\" : undefined}\n      />\n\n      {/* Inline Error Alerts */}\n      {validationError && (\n        <Alert variant=\"destructive\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertTitle>검증 오류</AlertTitle>\n          <AlertDescription>{validationError}</AlertDescription>\n        </Alert>\n      )}\n      \n      {quotaError && (\n        <Alert variant=\"destructive\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertTitle>할당량 초과</AlertTitle>\n          <AlertDescription>\n            {quotaError} 내일 다시 시도하시거나 수신자 수를 줄여주세요.\n          </AlertDescription>\n        </Alert>\n      )}\n      \n      {!estimate && !isEstimating && !estimateMutation.error && (\n        <Alert variant=\"warning\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertTitle>비용 추정 필요</AlertTitle>\n          <AlertDescription>\n            캠페인 발송 전에 비용을 추정해주세요.\n            <Button \n              variant=\"link\" \n              size=\"sm\" \n              onClick={handleEstimate}\n              className=\"p-0 h-auto ml-2 text-orange-700\"\n            >\n              지금 추정하기\n            </Button>\n          </AlertDescription>\n        </Alert>\n      )}\n      \n      {estimate && !estimate.quotaOk && (\n        <Alert variant=\"destructive\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertTitle>할당량 부족</AlertTitle>\n          <AlertDescription>\n            이 캠페인은 일일 할당량을 {Math.round((estimate.recipientCount / 45000) * 100)}% 초과합니다.\n            수신자를 줄이거나 내일 다시 시도해주세요.\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Campaign Summary */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {/* Audience Summary */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"flex items-center justify-between text-sm\">\n              <div className=\"flex items-center gap-2\">\n                <Users className=\"h-4 w-4 text-blue-500\" />\n                대상 설정\n              </div>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                onClick={() => goToStep(1)}\n              >\n                <Edit className=\"h-3 w-3 mr-1\" />\n                수정\n              </Button>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-700\">선택된 대상</p>\n                <p className=\"text-sm text-gray-600\">{audienceSummary}</p>\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-gray-700\">예상 수신자 수</p>\n                <p className=\"text-sm font-mono text-gray-900\">\n                  {estimate ? `${estimate.recipientCount.toLocaleString()}명` : '계산 중...'}\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Message Summary */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"flex items-center justify-between text-sm\">\n              <div className=\"flex items-center gap-2\">\n                <MessageSquare className=\"h-4 w-4 text-green-500\" />\n                메시지 설정\n              </div>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                onClick={() => goToStep(2)}\n              >\n                <Edit className=\"h-3 w-3 mr-1\" />\n                수정\n              </Button>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-700\">캠페인명</p>\n                <p className=\"text-sm text-gray-600\">{state.message.name}</p>\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-gray-700\">메시지 길이</p>\n                <p className=\"text-sm text-gray-600\">{state.message.messageBody.length}자</p>\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-gray-700\">개인화 변수</p>\n                <p className=\"text-sm text-gray-600\">{Object.keys(state.message.variables).length}개</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Channel Summary */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"flex items-center justify-between text-sm\">\n              <div className=\"flex items-center gap-2\">\n                <Settings className=\"h-4 w-4 text-purple-500\" />\n                채널 설정\n              </div>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                onClick={() => goToStep(3)}\n              >\n                <Edit className=\"h-3 w-3 mr-1\" />\n                수정\n              </Button>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-700\">전송 순서</p>\n                <p className=\"text-sm text-gray-600\">{channelSummary}</p>\n                <div className=\"flex gap-1 mt-2\">\n                  {state.channels.channelOrder.map((channelName, index) => (\n                    <Badge key={channelName} variant=\"secondary\" className=\"text-xs\">\n                      {index + 1}. {channelName}\n                      {index > 0 && state.channels.fallbackEnabled && ' (폴백)'}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Cost Estimation */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <DollarSign className=\"h-5 w-5 text-orange-500\" />\n              비용 및 할당량 예상\n            </div>\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              onClick={handleEstimate}\n              disabled={isEstimating}\n            >\n              {isEstimating ? (\n                <>\n                  <Loader2 className=\"h-3 w-3 mr-1 animate-spin\" />\n                  계산 중...\n                </>\n              ) : (\n                <>\n                  <RefreshCw className=\"h-3 w-3 mr-1\" />\n                  다시 계산\n                </>\n              )}\n            </Button>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {estimateMutation.isError ? (\n            <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n              <div className=\"flex items-start gap-2\">\n                <AlertCircle className=\"h-4 w-4 text-red-500 mt-0.5 flex-shrink-0\" />\n                <div>\n                  <p className=\"font-medium text-red-800\">비용 계산 실패</p>\n                  <p className=\"text-sm text-red-700 mt-1\">\n                    비용을 계산할 수 없습니다. 다시 시도해주세요.\n                  </p>\n                </div>\n              </div>\n            </div>\n          ) : estimate ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"p-4 bg-blue-50 rounded-lg\">\n                <div className=\"flex items-center gap-2\">\n                  <Users className=\"h-4 w-4 text-blue-600\" />\n                  <p className=\"text-sm font-medium text-blue-800\">수신자 수</p>\n                </div>\n                <p className=\"text-lg font-mono text-blue-900 mt-1\">\n                  {estimate.recipientCount.toLocaleString()}명\n                </p>\n              </div>\n              \n              <div className=\"p-4 bg-green-50 rounded-lg\">\n                <div className=\"flex items-center gap-2\">\n                  <DollarSign className=\"h-4 w-4 text-green-600\" />\n                  <p className=\"text-sm font-medium text-green-800\">예상 비용</p>\n                </div>\n                <p className=\"text-lg font-mono text-green-900 mt-1\">\n                  {estimate.estimatedCost.toLocaleString()}원\n                </p>\n              </div>\n              \n              <div className={`p-4 rounded-lg ${\n                estimate.quotaOk \n                  ? 'bg-green-50' \n                  : 'bg-red-50'\n              }`}>\n                <div className=\"flex items-center gap-2\">\n                  <CheckCircle2 className={`h-4 w-4 ${\n                    estimate.quotaOk \n                      ? 'text-green-600' \n                      : 'text-red-600'\n                  }`} />\n                  <p className={`text-sm font-medium ${\n                    estimate.quotaOk \n                      ? 'text-green-800' \n                      : 'text-red-800'\n                  }`}>\n                    할당량 상태\n                  </p>\n                </div>\n                <p className={`text-lg font-mono mt-1 ${\n                  estimate.quotaOk \n                    ? 'text-green-900' \n                    : 'text-red-900'\n                }`}>\n                  {estimate.quotaOk ? '사용 가능' : '초과됨'}\n                </p>\n              </div>\n            </div>\n          ) : (\n            <div className=\"p-8 text-center\">\n              <Loader2 className=\"h-8 w-8 animate-spin text-gray-400 mx-auto mb-4\" />\n              <p className=\"text-gray-600\">비용을 계산하는 중입니다...</p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Schedule Option */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Calendar className=\"h-5 w-5 text-purple-500\" />\n            발송 일정 (선택사항)\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox\n              id=\"schedule-enabled\"\n              checked={scheduleEnabled}\n              onCheckedChange={(checked) => setScheduleEnabled(checked as boolean)}\n            />\n            <Label htmlFor=\"schedule-enabled\">예약 발송 사용</Label>\n          </div>\n\n          {scheduleEnabled && (\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"scheduled-date\">발송 날짜</Label>\n                <Input\n                  id=\"scheduled-date\"\n                  type=\"date\"\n                  value={scheduledDate}\n                  onChange={(e) => setScheduledDate(e.target.value)}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"scheduled-time\">발송 시간</Label>\n                <Input\n                  id=\"scheduled-time\"\n                  type=\"time\"\n                  value={scheduledTime}\n                  onChange={(e) => setScheduledTime(e.target.value)}\n                />\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Send Button */}\n      <div className=\"flex justify-center pt-6\">\n        <Button\n          size=\"lg\"\n          onClick={handleSendClick}\n          disabled={!estimate || !estimate.quotaOk || isEstimating}\n          className=\"px-8 bg-blue-600 hover:bg-blue-700\"\n        >\n          <Send className=\"h-4 w-4 mr-2\" />\n          캠페인 발송\n        </Button>\n      </div>\n\n      {/* Confirmation Modal */}\n      <CampaignConfirmationModal\n        isOpen={showConfirmModal}\n        onClose={() => setShowConfirmModal(false)}\n        onConfirm={handleConfirmSend}\n        isLoading={isSending}\n        campaignData={{\n          name: state.message.name,\n          messageBody: state.message.messageBody,\n          channelOrder: state.channels.channelOrder,\n          fallbackEnabled: state.channels.fallbackEnabled\n        }}\n        estimate={estimate}\n      />\n\n      {/* Validation Errors */}\n      {state.errors[4] && (\n        <div className=\"p-4 bg-red-50 border border-red-200 rounded-md\">\n          <div className=\"text-sm text-red-600\">\n            {state.errors[4].map((error, index) => (\n              <p key={index}>{error}</p>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8436, "column": 0}, "map": {"version":3,"sources":["file:///home/junseoklee/ClaudeCode/Productivity/frontend/frontend/src/app/campaigns/new/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useCallback, Suspense } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { WizardProvider, useWizard } from '@/lib/context/campaign-wizard-context';\nimport { CampaignErrorProvider } from '@/lib/context/campaign-error-context';\nimport { WizardStep, WIZARD_STEPS } from '@/lib/types/campaign-wizard';\nimport { Stepper } from '@/components/ui/stepper';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { AudienceStep } from '@/components/campaign-wizard/audience-step';\nimport { MessageStep } from '@/components/campaign-wizard/message-step';\nimport { ChannelStep } from '@/components/campaign-wizard/channel-step';\nimport { ReviewStep } from '@/components/campaign-wizard/review-step';\nimport { ArrowLeft, ArrowRight, X } from 'lucide-react';\n\nfunction CampaignWizardContent() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const {\n    state,\n    goToStep,\n    goToNextStep,\n    goToPreviousStep,\n    validateCurrentStep,\n    canGoToStep,\n    resetWizard\n  } = useWizard();\n\n  // Sync URL with current step\n  useEffect(() => {\n    const urlStep = searchParams.get('step');\n    const stepNumber = urlStep ? parseInt(urlStep, 10) : 1;\n    \n    // Validate step number and update if different\n    if (stepNumber >= 1 && stepNumber <= 4 && stepNumber !== state.currentStep) {\n      if (canGoToStep(stepNumber as WizardStep)) {\n        goToStep(stepNumber as WizardStep);\n      } else {\n        // If user tries to access invalid step, redirect to current valid step\n        const currentUrl = new URL(window.location.href);\n        currentUrl.searchParams.set('step', state.currentStep.toString());\n        router.replace(currentUrl.toString(), { scroll: false });\n      }\n    }\n  }, [searchParams, state.currentStep, canGoToStep, goToStep, router]);\n\n  // Update URL when step changes\n  useEffect(() => {\n    const currentUrl = new URL(window.location.href);\n    const urlStep = currentUrl.searchParams.get('step');\n    \n    if (urlStep !== state.currentStep.toString()) {\n      currentUrl.searchParams.set('step', state.currentStep.toString());\n      router.replace(currentUrl.toString(), { scroll: false });\n    }\n  }, [state.currentStep, router]);\n\n  const handleStepClick = (step: WizardStep) => {\n    if (canGoToStep(step)) {\n      goToStep(step);\n    }\n  };\n\n  const handleNext = () => {\n    const validation = validateCurrentStep();\n    if (validation.isValid) {\n      goToNextStep();\n    }\n  };\n\n  const handlePrevious = () => {\n    goToPreviousStep();\n  };\n\n  const handleCancel = () => {\n    if (confirm('Are you sure you want to cancel? All unsaved progress will be lost.')) {\n      resetWizard();\n      router.push('/campaigns');\n    }\n  };\n\n  // Prevent accidental page reload/navigation\n  useEffect(() => {\n    const handleBeforeUnload = (e: BeforeUnloadEvent) => {\n      // Only show warning if there's unsaved content\n      const hasContent = state.message.name || state.message.messageBody || \n                        state.audience.groupIds.length > 0 || \n                        state.audience.segmentIds.length > 0;\n\n      if (hasContent) {\n        e.preventDefault();\n        e.returnValue = '';\n        return '';\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload);\n  }, [state]);\n\n  const getCurrentStepComponent = () => {\n    switch (state.currentStep) {\n      case 1:\n        return <AudienceStep />;\n      case 2:\n        return <MessageStep />;\n      case 3:\n        return <ChannelStep />;\n      case 4:\n        return <ReviewStep />;\n      default:\n        return <AudienceStep />;\n    }\n  };\n\n  const getCompletedSteps = (): WizardStep[] => {\n    const completed: WizardStep[] = [];\n    \n    // Check which steps have been completed\n    for (let step = 1; step <= 4; step++) {\n      const stepNum = step as WizardStep;\n      if (stepNum < state.currentStep) {\n        // Only mark as completed if all previous steps are valid\n        let isCompleted = true;\n        for (let checkStep = 1; checkStep <= stepNum; checkStep++) {\n          // Simplified completion check - in real app you'd validate each step's data\n          if (checkStep === 1 && !state.audience.includeAll && \n              state.audience.groupIds.length === 0 && \n              state.audience.segmentIds.length === 0) {\n            isCompleted = false;\n            break;\n          }\n          if (checkStep === 2 && (!state.message.name || !state.message.messageBody)) {\n            isCompleted = false;\n            break;\n          }\n          if (checkStep === 3 && state.channels.channels.length === 0) {\n            isCompleted = false;\n            break;\n          }\n        }\n        if (isCompleted) {\n          completed.push(stepNum);\n        }\n      }\n    }\n    \n    return completed;\n  };\n\n  const validation = validateCurrentStep();\n  const isFirstStep = state.currentStep === 1;\n  const isLastStep = state.currentStep === 4;\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white border-b border-gray-200 sticky top-0 z-10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <h1 className=\"text-lg font-semibold text-gray-900\">\n                Create New Campaign\n              </h1>\n              <div className=\"text-sm text-gray-500\">\n                Step {state.currentStep} of {WIZARD_STEPS.length}\n              </div>\n            </div>\n            <Button \n              variant=\"ghost\" \n              size=\"sm\" \n              onClick={handleCancel}\n              className=\"text-gray-500 hover:text-gray-700\"\n            >\n              <X className=\"h-4 w-4 mr-1\" />\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Progress Stepper */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <Stepper\n            currentStep={state.currentStep as WizardStep}\n            completedSteps={getCompletedSteps()}\n            canGoToStep={canGoToStep}\n            onStepClick={handleStepClick}\n          />\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          {getCurrentStepComponent()}\n        </div>\n\n        {/* Navigation Controls */}\n        <Card className=\"sticky bottom-4 z-10\">\n          <CardContent className=\"flex items-center justify-between p-4\">\n            <div className=\"flex items-center space-x-4\">\n              <Button\n                variant=\"outline\"\n                onClick={handlePrevious}\n                disabled={isFirstStep}\n              >\n                <ArrowLeft className=\"h-4 w-4 mr-1\" />\n                Previous\n              </Button>\n            </div>\n\n            <div className=\"text-center\">\n              <div className=\"text-sm font-medium text-gray-900\">\n                {WIZARD_STEPS[state.currentStep - 1]?.title}\n              </div>\n              {!validation.isValid && (\n                <div className=\"text-xs text-red-600 mt-1\">\n                  {validation.errors.length === 1 \n                    ? '1 error to fix' \n                    : `${validation.errors.length} errors to fix`}\n                </div>\n              )}\n            </div>\n\n            <div className=\"flex items-center space-x-4\">\n              {!isLastStep ? (\n                <Button\n                  onClick={handleNext}\n                  disabled={!validation.isValid}\n                >\n                  Next\n                  <ArrowRight className=\"h-4 w-4 ml-1\" />\n                </Button>\n              ) : (\n                <div className=\"text-sm text-gray-600\">\n                  Review and send when ready\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Loading overlay */}\n      {state.isSubmitting && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\" />\n              <span className=\"text-gray-900\">Sending campaign...</span>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Main page component wrapped with providers\nexport default function NewCampaignPage() {\n  return (\n    <WizardProvider>\n      <Suspense fallback={\n        <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\" />\n        </div>\n      }>\n        <CampaignErrorProvider>\n          <CampaignWizardContent />\n        </CampaignErrorProvider>\n      </Suspense>\n    </WizardProvider>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8942, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}