// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/activity-score" | "/analytics" | "/analytics/ab-tests" | "/analytics/campaigns" | "/analytics/costs" | "/analytics/print" | "/auth/login" | "/auth/reset-password" | "/auth/signup" | "/auth/verify-email" | "/calendar" | "/campaigns" | "/campaigns/[id]" | "/campaigns/[id]/analytics" | "/campaigns/[id]/analytics/print" | "/campaigns/[id]/monitor" | "/campaigns/new" | "/campaigns/personalization" | "/campaigns/scheduled" | "/campaigns/templates" | "/compliance" | "/contacts" | "/contacts/[id]" | "/contacts/deduplication" | "/contacts/export" | "/contacts/import" | "/dashboard" | "/help" | "/help/contact" | "/help/faq" | "/help/guide" | "/help/tutorial" | "/inbox" | "/inbox/[conversationId]" | "/inbox/auto-reply" | "/notifications" | "/privacy" | "/reports" | "/reports/campaigns" | "/reports/contacts" | "/reports/monthly" | "/reports/quota" | "/segments" | "/settings" | "/settings/api-keys" | "/settings/billing" | "/settings/channels" | "/settings/organization" | "/settings/profile" | "/settings/quota" | "/settings/security" | "/settings/tenant" | "/settings/users" | "/terms" | "/test-alerts" | "/unauthorized"
type PageRoutes = never
type LayoutRoutes = "/" | "/campaigns/[id]"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/activity-score": {}
  "/analytics": {}
  "/analytics/ab-tests": {}
  "/analytics/campaigns": {}
  "/analytics/costs": {}
  "/analytics/print": {}
  "/auth/login": {}
  "/auth/reset-password": {}
  "/auth/signup": {}
  "/auth/verify-email": {}
  "/calendar": {}
  "/campaigns": {}
  "/campaigns/[id]": { "id": string; }
  "/campaigns/[id]/analytics": { "id": string; }
  "/campaigns/[id]/analytics/print": { "id": string; }
  "/campaigns/[id]/monitor": { "id": string; }
  "/campaigns/new": {}
  "/campaigns/personalization": {}
  "/campaigns/scheduled": {}
  "/campaigns/templates": {}
  "/compliance": {}
  "/contacts": {}
  "/contacts/[id]": { "id": string; }
  "/contacts/deduplication": {}
  "/contacts/export": {}
  "/contacts/import": {}
  "/dashboard": {}
  "/help": {}
  "/help/contact": {}
  "/help/faq": {}
  "/help/guide": {}
  "/help/tutorial": {}
  "/inbox": {}
  "/inbox/[conversationId]": { "conversationId": string; }
  "/inbox/auto-reply": {}
  "/notifications": {}
  "/privacy": {}
  "/reports": {}
  "/reports/campaigns": {}
  "/reports/contacts": {}
  "/reports/monthly": {}
  "/reports/quota": {}
  "/segments": {}
  "/settings": {}
  "/settings/api-keys": {}
  "/settings/billing": {}
  "/settings/channels": {}
  "/settings/organization": {}
  "/settings/profile": {}
  "/settings/quota": {}
  "/settings/security": {}
  "/settings/tenant": {}
  "/settings/users": {}
  "/terms": {}
  "/test-alerts": {}
  "/unauthorized": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/campaigns/[id]": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
